{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CardContent from \"./CardContent\";\nimport CardActions from \"./CardActions\";\n\nimport CardCover from \"./CardCover\";\n\nimport CardTitle from \"./CardTitle\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\n\nvar Card = function Card(_ref) {\n  var _ref$elevation = _ref.elevation,\n    cardElevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n    onLongPress = _ref.onLongPress,\n    onPress = _ref.onPress,\n    children = _ref.children,\n    style = _ref.style,\n    theme = _ref.theme,\n    testID = _ref.testID,\n    accessible = _ref.accessible,\n    rest = _objectWithoutProperties(_ref, [\"elevation\", \"onLongPress\", \"onPress\", \"children\", \"style\", \"theme\", \"testID\", \"accessible\"]);\n  var _React$useRef = React.useRef(new Animated.Value(cardElevation)),\n    elevation = _React$useRef.current;\n  var handlePressIn = function handlePressIn() {\n    var dark = theme.dark,\n      mode = theme.mode,\n      scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact'\n    }).start();\n  };\n  var handlePressOut = function handlePressOut() {\n    var dark = theme.dark,\n      mode = theme.mode,\n      scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: cardElevation,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact'\n    }).start();\n  };\n  var roundness = theme.roundness;\n  var total = React.Children.count(children);\n  var siblings = React.Children.map(children, function (child) {\n    return React.isValidElement(child) && child.type ? child.type.displayName : null;\n  });\n  return React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: roundness,\n      elevation: elevation\n    }, style]\n  }, rest), React.createElement(TouchableWithoutFeedback, {\n    delayPressIn: 0,\n    disabled: !(onPress || onLongPress),\n    onLongPress: onLongPress,\n    onPress: onPress,\n    onPressIn: onPress ? handlePressIn : undefined,\n    onPressOut: onPress ? handlePressOut : undefined,\n    testID: testID,\n    accessible: accessible\n  }, React.createElement(View, {\n    style: styles.innerContainer\n  }, React.Children.map(children, function (child, index) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      index: index,\n      total: total,\n      siblings: siblings\n    }) : child;\n  }))));\n};\n\nCard.Content = CardContent;\n\nCard.Actions = CardActions;\n\nCard.Cover = CardCover;\n\nCard.Title = CardTitle;\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"mappings":"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","names":["React","CardContent","CardActions","CardCover","CardTitle","Surface","withTheme","Card","_ref","elevation","cardElevation","onLongPress","onPress","children","style","theme","testID","accessible","rest","useRef","Animated","Value","current","handlePressIn","dark","mode","scale","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","roundness","total","Children","count","siblings","map","child","isValidElement","type","displayName","borderRadius","TouchableWithoutFeedback","delayPressIn","disabled","onPressIn","undefined","onPressOut","View","styles","innerContainer","index","cloneElement","Content","Actions","Cover","Title","StyleSheet","create","flexGrow","flexShrink"],"sources":["Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Card = ({\n  elevation: cardElevation = 1,\n  onLongPress,\n  onPress,\n  children,\n  style,\n  theme,\n  testID,\n  accessible,\n  ...rest\n}: Props) => {\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(cardElevation)\n  );\n\n  const handlePressIn = () => {\n    const {\n      dark,\n      mode,\n      animation: { scale },\n    } = theme;\n    Animated.timing(elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact',\n    }).start();\n  };\n\n  const handlePressOut = () => {\n    const {\n      dark,\n      mode,\n      animation: { scale },\n    } = theme;\n    Animated.timing(elevation, {\n      toValue: cardElevation,\n      duration: 150 * scale,\n      useNativeDriver: !dark || mode === 'exact',\n    }).start();\n  };\n\n  const { roundness } = theme;\n  const total = React.Children.count(children);\n  const siblings = React.Children.map(children, (child) =>\n    React.isValidElement(child) && child.type\n      ? (child.type as any).displayName\n      : null\n  );\n  return (\n    <Surface\n      // @ts-ignore\n      style={[{ borderRadius: roundness, elevation }, style]}\n      {...rest}\n    >\n      <TouchableWithoutFeedback\n        delayPressIn={0}\n        disabled={!(onPress || onLongPress)}\n        onLongPress={onLongPress}\n        onPress={onPress}\n        onPressIn={onPress ? handlePressIn : undefined}\n        onPressOut={onPress ? handlePressOut : undefined}\n        testID={testID}\n        accessible={accessible}\n      >\n        <View style={styles.innerContainer}>\n          {React.Children.map(children, (child, index) =>\n            React.isValidElement(child)\n              ? React.cloneElement(child, {\n                  index,\n                  total,\n                  siblings,\n                })\n              : child\n          )}\n        </View>\n      </TouchableWithoutFeedback>\n    </Surface>\n  );\n};\n\n// @component ./CardContent.tsx\nCard.Content = CardContent;\n// @component ./CardActions.tsx\nCard.Actions = CardActions;\n// @component ./CardCover.tsx\nCard.Cover = CardCover;\n// @component ./CardTitle.tsx\nCard.Title = CardTitle;\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default withTheme(Card);\n"]},"metadata":{},"sourceType":"module"}