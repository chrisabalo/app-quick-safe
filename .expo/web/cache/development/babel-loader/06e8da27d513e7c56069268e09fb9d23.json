{"ast":null,"code":"\n'use strict';\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Settings = require('react-native').NativeModules.FBSettings;\nmodule.exports = {\n  getAdvertiserTrackingEnabled: function getAdvertiserTrackingEnabled() {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  setAdvertiserTrackingEnabled: function setAdvertiserTrackingEnabled(ATE) {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  setDataProcessingOptions: function setDataProcessingOptions(options) {\n    var country = 0;\n    if (typeof (arguments.length <= 1 ? undefined : arguments[1]) === 'number') {\n      country = arguments.length <= 1 ? undefined : arguments[1];\n    }\n    var state = 0;\n    if (typeof (arguments.length <= 2 ? undefined : arguments[2]) === 'number') {\n      state = arguments.length <= 2 ? undefined : arguments[2];\n    }\n    Settings.setDataProcessingOptions(options, country, state);\n  }\n};","map":{"version":3,"mappings":";AAWA;;AAAA;AAIA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,aAAxB,CAAsCC,UAAvD;AAEAC,MAAM,CAACC,OAAP,GAAiB;EAKfC,4BAA4B,0CAAqB;IAC/C,IAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzB,OAAOR,QAAQ,CAACM,4BAAT,EAAP;IACD,CAFD,MAEO;MACL,OAAOG,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;IACD;EACF,CAXc;EAgBfC,4BAA4B,wCAACC,GAAD,EAAiC;IAC3D,IAAIL,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzB,OAAOR,QAAQ,CAACW,4BAAT,CAAsCC,GAAtC,CAAP;IACD,CAFD,MAEO;MACL,OAAOH,OAAO,CAACC,OAAR,CAAgB,KAAhB,CAAP;IACD;EACF,CAtBc;EA0BfG,wBAAwB,oCAACC,OAAD,EAAiD;IACvE,IAAIC,OAAe,GAAG,CAAtB;IACA,IAAI,8DAAmB,QAAvB,EAAiC;MAC/BA,OAAO,mDAAP;IACD;IACD,IAAIC,KAAa,GAAG,CAApB;IACA,IAAI,8DAAmB,QAAvB,EAAiC;MAC/BA,KAAK,mDAAL;IACD;IACDhB,QAAQ,CAACa,wBAAT,CAAkCC,OAAlC,EAA2CC,OAA3C,EAAoDC,KAApD;EACD;AApCc,CAAjB","names":["Settings","require","NativeModules","FBSettings","module","exports","getAdvertiserTrackingEnabled","Platform","OS","Promise","resolve","setAdvertiserTrackingEnabled","ATE","setDataProcessingOptions","options","country","state"],"sources":["FBSettings.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n * All rights reserved.\n *\n * This source code is licensed under the license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport {Platform} from 'react-native';\n\nconst Settings = require('react-native').NativeModules.FBSettings;\n\nmodule.exports = {\n  /**\n   * For iOS only, get AdvertiserTrackingEnabled status.\n   * @platform ios\n   */\n  getAdvertiserTrackingEnabled(): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.getAdvertiserTrackingEnabled();\n    } else {\n      return Promise.resolve(true);\n    }\n  },\n  /**\n   * For iOS only, set AdvertiserTrackingEnabled status, only works in iOS 14 and above.\n   * @platform ios\n   */\n  setAdvertiserTrackingEnabled(ATE: boolean): Promise<boolean> {\n    if (Platform.OS === 'ios') {\n      return Settings.setAdvertiserTrackingEnabled(ATE);\n    } else {\n      return Promise.resolve(false);\n    }\n  },\n  /**\n   * Set data processing options\n   */\n  setDataProcessingOptions(options: Array<string>, ...args: Array<number>) {\n    let country: number = 0;\n    if (typeof args[0] === 'number') {\n      country = args[0];\n    }\n    let state: number = 0;\n    if (typeof args[1] === 'number') {\n      state = args[1];\n    }\n    Settings.setDataProcessingOptions(options, country, state);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}