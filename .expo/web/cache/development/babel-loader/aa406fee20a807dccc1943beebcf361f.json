{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport AppbarContent from \"./AppbarContent\";\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackAction from \"./AppbarBackAction\";\n\nimport AppbarHeader from \"./AppbarHeader\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/colors\";\nimport overlay from \"../../styles/overlay\";\nexport var DEFAULT_APPBAR_HEIGHT = 56;\n\nvar Appbar = function Appbar(_ref) {\n  var children = _ref.children,\n    dark = _ref.dark,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, [\"children\", \"dark\", \"style\", \"theme\"]);\n  var colors = theme.colors,\n    isDarkTheme = theme.dark,\n    mode = theme.mode;\n  var _ref2 = StyleSheet.flatten(style) || {},\n    customBackground = _ref2.backgroundColor,\n    _ref2$elevation = _ref2.elevation,\n    elevation = _ref2$elevation === void 0 ? 4 : _ref2$elevation,\n    restStyle = _objectWithoutProperties(_ref2, [\"backgroundColor\", \"elevation\"]);\n  var isDark;\n  var backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark = backgroundColor === 'transparent' ? false : !color(backgroundColor).isLight();\n  }\n  var shouldCenterContent = false;\n  var shouldAddLeftSpacing = false;\n  var shouldAddRightSpacing = false;\n  if (Platform.OS === 'ios') {\n    var hasAppbarContent = false;\n    var leftItemsCount = 0;\n    var rightItemsCount = 0;\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n    shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n  return React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor: backgroundColor\n    }, styles.appbar, {\n      elevation: elevation\n    }, restStyle]\n  }, rest), shouldAddLeftSpacing ? React.createElement(View, {\n    style: styles.spacing\n  }) : null, React.Children.toArray(children).filter(function (child) {\n    return child != null && typeof child !== 'boolean';\n  }).map(function (child, i) {\n    if (!React.isValidElement(child) || ![AppbarContent, AppbarAction, AppbarBackAction].includes(child.type)) {\n      return child;\n    }\n    var props = {\n      color: typeof child.props.color !== 'undefined' ? child.props.color : isDark ? white : black\n    };\n    if (child.type === AppbarContent) {\n      props.style = [\n      i !== 0 && {\n        marginLeft: 8\n      }, shouldCenterContent && {\n        alignItems: 'center'\n      }, child.props.style];\n    }\n    return React.cloneElement(child, props);\n  }), shouldAddRightSpacing ? React.createElement(View, {\n    style: styles.spacing\n  }) : null);\n};\n\nAppbar.Content = AppbarContent;\n\nAppbar.Action = AppbarAction;\n\nAppbar.BackAction = AppbarBackAction;\n\nAppbar.Header = AppbarHeader;\nvar styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4\n  },\n  spacing: {\n    width: 48\n  }\n});\nexport default withTheme(Appbar);","map":{"version":3,"mappings":"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","names":["React","color","AppbarContent","AppbarAction","AppbarBackAction","AppbarHeader","Surface","withTheme","black","white","overlay","DEFAULT_APPBAR_HEIGHT","Appbar","_ref","children","dark","style","theme","rest","colors","isDarkTheme","mode","StyleSheet","flatten","customBackground","_ref2","backgroundColor","elevation","restStyle","isDark","surface","primary","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","styles","appbar","View","spacing","toArray","filter","map","i","includes","props","marginLeft","alignItems","cloneElement","Content","Action","BackAction","Header","create","height","flexDirection","paddingHorizontal","width"],"sources":["Appbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  AppbarContent as _AppbarContent,\n} from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport AppbarHeader, { AppbarHeader as _AppbarHeader } from './AppbarHeader';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport overlay from '../../styles/overlay';\n\ntype Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *  <Appbar style={styles.bottom}>\n *    <Appbar.Action\n *      icon=\"archive\"\n *      onPress={() => console.log('Pressed archive')}\n *     />\n *     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *     <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *     <Appbar.Action\n *       icon=\"delete\"\n *       onPress={() => console.log('Pressed delete')}\n *     />\n *   </Appbar>\n *  );\n *\n * export default MyComponent\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nconst Appbar = ({ children, dark, style, theme, ...rest }: Props) => {\n  const { colors, dark: isDarkTheme, mode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : !color(backgroundColor).isLight();\n  }\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if (Platform.OS === 'ios') {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n  return (\n    <Surface\n      //@ts-ignore Types of property 'backgroundColor' are incompatible.\n      style={[{ backgroundColor }, styles.appbar, { elevation }, restStyle]}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (\n            !React.isValidElement(child) ||\n            ![\n              AppbarContent,\n              AppbarAction,\n              AppbarBackAction,\n              // @ts-ignore Type 'string' is not assignable to type\n            ].includes(child.type)\n          ) {\n            return child;\n          }\n\n          const props: { color?: string; style?: StyleProp<ViewStyle> } = {\n            color:\n              typeof child.props.color !== 'undefined'\n                ? child.props.color\n                : isDark\n                ? white\n                : black,\n          };\n\n          if (child.type === AppbarContent) {\n            props.style = [\n              // Since content is not first item, add extra left margin\n              i !== 0 && { marginLeft: 8 },\n              shouldCenterContent && { alignItems: 'center' },\n              child.props.style,\n            ];\n          }\n          return React.cloneElement(child, props);\n        })}\n      {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\n    </Surface>\n  );\n};\n\n// @component ./AppbarContent.tsx\nAppbar.Content = AppbarContent;\n// @component ./AppbarAction.tsx\nAppbar.Action = AppbarAction;\n// @component ./AppbarBackAction.tsx\nAppbar.BackAction = AppbarBackAction;\n// @component ./AppbarHeader.tsx\nAppbar.Header = AppbarHeader;\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n});\n\nexport default withTheme(Appbar);\n"]},"metadata":{},"sourceType":"module"}