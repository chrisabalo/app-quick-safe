{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _this = this,\n  _jsxFileName = \"E:\\\\local\\\\app-quick-safe\\\\node_modules\\\\react-native-elements\\\\src\\\\checkbox\\\\CheckBox.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextElement from \"../text/Text\";\nimport CheckBoxIcon from \"./CheckBoxIcon\";\nimport { fonts, withTheme } from \"../config\";\nvar CheckBox = function CheckBox(props) {\n  var theme = props.theme,\n    rest = _objectWithoutProperties(props, [\"theme\"]);\n  var Component = rest.Component,\n    checked = rest.checked,\n    iconRight = rest.iconRight,\n    title = rest.title,\n    titleProps = rest.titleProps,\n    center = rest.center,\n    right = rest.right,\n    containerStyle = rest.containerStyle,\n    textStyle = rest.textStyle,\n    wrapperStyle = rest.wrapperStyle,\n    onPress = rest.onPress,\n    onLongPress = rest.onLongPress,\n    checkedTitle = rest.checkedTitle,\n    fontFamily = rest.fontFamily,\n    _rest$checkedColor = rest.checkedColor,\n    checkedColor = _rest$checkedColor === void 0 ? theme.colors.primary : _rest$checkedColor,\n    attributes = _objectWithoutProperties(rest, [\"Component\", \"checked\", \"iconRight\", \"title\", \"titleProps\", \"center\", \"right\", \"containerStyle\", \"textStyle\", \"wrapperStyle\", \"onPress\", \"onLongPress\", \"checkedTitle\", \"fontFamily\", \"checkedColor\"]);\n  var accessibilityState = {\n    checked: !!checked\n  };\n  return React.createElement(Component, _extends({\n    accessibilityRole: \"checkbox\",\n    accessibilityState: accessibilityState,\n    testID: \"checkbox\"\n  }, attributes, {\n    onLongPress: onLongPress,\n    onPress: onPress,\n    style: StyleSheet.flatten([styles.container, title && styles.containerHasTitle, containerStyle && containerStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([styles.wrapper, right && {\n      justifyContent: 'flex-end'\n    }, center && {\n      justifyContent: 'center'\n    }, wrapperStyle && wrapperStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, !iconRight && React.createElement(CheckBoxIcon, _extends({}, props, {\n    checkedColor: checkedColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }\n  })), React.isValidElement(title) ? title : title !== '' && title && React.createElement(TextElement, _extends({\n    testID: \"checkboxTitle\",\n    style: StyleSheet.flatten([styles.text(theme), textStyle && textStyle, fontFamily && {\n      fontFamily: fontFamily\n    }])\n  }, titleProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }), checked ? checkedTitle || title : title), iconRight && React.createElement(CheckBoxIcon, _extends({}, props, {\n    checkedColor: checkedColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }))));\n};\nCheckBox.propTypes = _objectSpread(_objectSpread({}, CheckBoxIcon.propTypes), {}, {\n  Component: PropTypes.elementType,\n  iconRight: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleProps: PropTypes.object,\n  center: PropTypes.bool,\n  right: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  checkedTitle: PropTypes.string,\n  fontFamily: PropTypes.string\n});\nCheckBox.defaultProps = {\n  checked: false,\n  iconRight: false,\n  right: false,\n  center: false,\n  uncheckedColor: '#bfbfbf',\n  checkedIcon: 'check-square-o',\n  uncheckedIcon: 'square-o',\n  size: 24,\n  Component: TouchableOpacity,\n  titleProps: {}\n};\nvar styles = {\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10\n  },\n  containerHasTitle: {\n    borderWidth: 1,\n    borderRadius: 3,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed'\n  },\n  text: function text(theme) {\n    return _objectSpread({\n      marginLeft: 10,\n      marginRight: 10,\n      color: theme.colors.grey1\n    }, Platform.select({\n      android: _objectSpread({}, fonts.android.bold),\n      default: {\n        fontWeight: 'bold'\n      }\n    }));\n  }\n};\nexport { CheckBox };\nexport default withTheme(CheckBox, 'CheckBox');","map":{"version":3,"names":["React","PropTypes","TextElement","CheckBoxIcon","fonts","withTheme","CheckBox","props","theme","rest","Component","checked","iconRight","title","titleProps","center","right","containerStyle","textStyle","wrapperStyle","onPress","onLongPress","checkedTitle","fontFamily","checkedColor","colors","primary","attributes","accessibilityState","StyleSheet","flatten","styles","container","containerHasTitle","wrapper","justifyContent","isValidElement","text","propTypes","elementType","bool","oneOfType","string","element","object","array","func","defaultProps","uncheckedColor","checkedIcon","uncheckedIcon","size","TouchableOpacity","flexDirection","alignItems","margin","marginLeft","marginRight","padding","borderWidth","borderRadius","backgroundColor","borderColor","color","grey1","Platform","select","android","bold","default","fontWeight"],"sources":["E:/local/app-quick-safe/node_modules/react-native-elements/src/checkbox/CheckBox.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, TouchableOpacity, View, Platform } from 'react-native';\n\nimport TextElement from '../text/Text';\nimport CheckBoxIcon from './CheckBoxIcon';\nimport { fonts, withTheme } from '../config';\n\nconst CheckBox = (props) => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    checked,\n    iconRight,\n    title,\n    titleProps,\n    center,\n    right,\n    containerStyle,\n    textStyle,\n    wrapperStyle,\n    onPress,\n    onLongPress,\n    checkedTitle,\n    fontFamily,\n    checkedColor = theme.colors.primary,\n    ...attributes\n  } = rest;\n\n  const accessibilityState = {\n    checked: !!checked,\n  };\n\n  return (\n    <Component\n      accessibilityRole=\"checkbox\"\n      accessibilityState={accessibilityState}\n      testID=\"checkbox\"\n      {...attributes}\n      onLongPress={onLongPress}\n      onPress={onPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        title && styles.containerHasTitle,\n        containerStyle && containerStyle,\n      ])}\n    >\n      <View\n        style={StyleSheet.flatten([\n          styles.wrapper,\n          right && { justifyContent: 'flex-end' },\n          center && { justifyContent: 'center' },\n          wrapperStyle && wrapperStyle,\n        ])}\n      >\n        {!iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n\n        {React.isValidElement(title)\n          ? title\n          : title !== '' &&\n            title && (\n              <TextElement\n                testID=\"checkboxTitle\"\n                style={StyleSheet.flatten([\n                  styles.text(theme),\n                  textStyle && textStyle,\n                  fontFamily && { fontFamily },\n                ])}\n                {...titleProps}\n              >\n                {checked ? checkedTitle || title : title}\n              </TextElement>\n            )}\n\n        {iconRight && <CheckBoxIcon {...props} checkedColor={checkedColor} />}\n      </View>\n    </Component>\n  );\n};\nCheckBox.propTypes = {\n  ...CheckBoxIcon.propTypes,\n  Component: PropTypes.elementType,\n  iconRight: PropTypes.bool,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleProps: PropTypes.object,\n  center: PropTypes.bool,\n  right: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  checkedTitle: PropTypes.string,\n  fontFamily: PropTypes.string,\n};\n\nCheckBox.defaultProps = {\n  checked: false,\n  iconRight: false,\n  right: false,\n  center: false,\n  uncheckedColor: '#bfbfbf',\n  checkedIcon: 'check-square-o',\n  uncheckedIcon: 'square-o',\n  size: 24,\n  Component: TouchableOpacity,\n  titleProps: {},\n};\n\nconst styles = {\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  container: {\n    margin: 5,\n    marginLeft: 10,\n    marginRight: 10,\n    padding: 10,\n  },\n  containerHasTitle: {\n    borderWidth: 1,\n    borderRadius: 3,\n    backgroundColor: '#fafafa',\n    borderColor: '#ededed',\n  },\n  text: (theme) => ({\n    marginLeft: 10,\n    marginRight: 10,\n    color: theme.colors.grey1,\n    ...Platform.select({\n      android: {\n        ...fonts.android.bold,\n      },\n      default: {\n        fontWeight: 'bold',\n      },\n    }),\n  }),\n};\n\nexport { CheckBox };\nexport default withTheme(CheckBox, 'CheckBox');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}