{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nvar Dummy = function Dummy(_ref) {\n  var children = _ref.children;\n  return React.createElement(React.Fragment, null, children);\n};\nexport var PanGestureHandler = Dummy;\nexport var TapGestureHandler = Dummy;\nexport var GestureHandlerRootView = View;\nexport var GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5\n};","map":{"version":3,"names":["React","Dummy","children","PanGestureHandler","TapGestureHandler","GestureHandlerRootView","View","GestureState","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END"],"sources":["E:/local/app-quick-safe/node_modules/@react-navigation/drawer/src/views/GestureHandler.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View } from 'react-native';\nimport type {\n  PanGestureHandlerProperties,\n  TapGestureHandlerProperties,\n} from 'react-native-gesture-handler';\n\nconst Dummy: any = ({ children }: { children: React.ReactNode }) => (\n  <>{children}</>\n);\n\nexport const PanGestureHandler = Dummy as React.ComponentType<\n  PanGestureHandlerProperties\n>;\n\nexport const TapGestureHandler = Dummy as React.ComponentType<\n  TapGestureHandlerProperties\n>;\n\nexport const GestureHandlerRootView = View;\n\nexport const GestureState = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nexport type { PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAO/B,IAAMC,KAAU,GAAG,SAAbA,KAAU;EAAA,IAAMC,QAAQ,QAARA,QAAQ;EAAA,OAC5B,0CAAGA,QAAQ,CAAI;AAAA,CAChB;AAED,OAAO,IAAMC,iBAAiB,GAAGF,KAEhC;AAED,OAAO,IAAMG,iBAAiB,GAAGH,KAEhC;AAED,OAAO,IAAMI,sBAAsB,GAAGC,IAAI;AAE1C,OAAO,IAAMC,YAAY,GAAG;EAC1BC,YAAY,EAAE,CAAC;EACfC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,CAAC;EACTC,GAAG,EAAE;AACP,CAAC"},"metadata":{},"sourceType":"module"}