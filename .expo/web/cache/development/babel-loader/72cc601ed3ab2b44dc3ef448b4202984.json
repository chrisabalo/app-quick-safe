{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"E:\\\\local\\\\app-quick-safe\\\\navigation\\\\AuthProvider.js\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { LoginManager, AccessToken } from 'react-native-fbsdk';\nimport Loading from 'react-native-whc-loading';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nimport { apiUrl } from \"../apiUrl\";\nexport var AuthContext = createContext();\nexport var AuthProvider = function AuthProvider(_ref) {\n  var navigation = _ref.navigation,\n    children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userTokenId = _useState4[0],\n    setUserTokenId = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsloading = _useState6[1];\n  var storeToken = function storeToken(data) {\n    return _regeneratorRuntime.async(function storeToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userData\", data));\n          case 3:\n            _context.next = 8;\n            break;\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"Something went wrong\", _context.t0);\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n  var remove = function remove() {\n    return _regeneratorRuntime.async(function remove$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userData'));\n          case 3:\n            _context2.next = 8;\n            break;\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n          case 8:\n            _context2.prev = 8;\n            setUser('');\n            return _context2.finish(8);\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5, 8, 11]], Promise);\n  };\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser,\n      login: function login(email, password) {\n        return _regeneratorRuntime.async(function login$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(apiUrl.post('users/login', {\n                  email: email,\n                  password: password\n                }).then(function (response) {\n                  console.log(response.data);\n                  if (response.data.code == 208) {\n                    ToastAndroid.showWithGravity('Email/Mot de passe incorrect', ToastAndroid.LONG, ToastAndroid.TOP);\n                  } else if (response.data.code == 200) {\n                    console.log(\"connecter\");\n                    storeToken(JSON.stringify(response.data));\n                    setUser(JSON.stringify(response.data));\n                    console.log(\"Login data: \" + user);\n                  } else if (response.data.code == 210) {\n                    ToastAndroid.showWithGravity('Email/Mot de passe incorrect ', ToastAndroid.LONG, ToastAndroid.TOP);\n                  }\n                }).catch(function (err) {\n                  console.log(err);\n                }));\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      register: function register(firstName, lastName, telephone, adresse, email, personneContacter, selectedValue, password) {\n        var registerData;\n        return _regeneratorRuntime.async(function register$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                registerData = {\n                  firstName: firstName,\n                  lastName: lastName,\n                  telephone: telephone,\n                  adresse: adresse,\n                  email: email,\n                  personneContacter: personneContacter,\n                  selectedValue: selectedValue,\n                  password: password\n                };\n                _context4.next = 3;\n                return _regeneratorRuntime.awrap(apiUrl.post('users/register', registerData).then(function (response) {\n                  if (response.data.code == 300) {\n                    console.log(response.data);\n                    ToastAndroid.showWithGravity(' Verifiez votre connexion internet svp...', ToastAndroid.LONG, ToastAndroid.TOP);\n                  } else {\n                    if (response.data.code == 302) {\n                      console.log(\"compte a été creé\");\n                    }\n                  }\n                }).catch(function (error) {\n                  console.log(error);\n                }));\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      logout: function logout() {\n        return _regeneratorRuntime.async(function logout$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _regeneratorRuntime.awrap(remove());\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      userInfos: function userInfos(id) {\n        return _regeneratorRuntime.async(function userInfos$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return _regeneratorRuntime.awrap(apiUrl.get(\"users/:id\", {\n                  params: {\n                    id: id\n                  }\n                }).then(function (response) {\n                  console.log(response.data);\n                }).catch(function (e) {\n                  console.log(e);\n                }));\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","LoginManager","AccessToken","Loading","AsyncStorage","axios","apiUrl","AuthContext","AuthProvider","navigation","children","user","setUser","userTokenId","setUserTokenId","isLoading","setIsloading","storeToken","data","setItem","console","log","remove","removeItem","login","email","password","post","then","response","code","ToastAndroid","showWithGravity","LONG","TOP","JSON","stringify","catch","err","register","firstName","lastName","telephone","adresse","personneContacter","selectedValue","registerData","error","logout","userInfos","id","get","params","e"],"sources":["E:/local/app-quick-safe/navigation/AuthProvider.js"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport {View, StyleSheet, ToastAndroid, Button} from \"react-native\";\nimport { LoginManager, AccessToken } from 'react-native-fbsdk';\nimport Loading from 'react-native-whc-loading'\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nimport {apiUrl} from \"../apiUrl\";\n\n\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({navigation,children}) => {\n    const [user, setUser] = useState(null);\n    const [userTokenId, setUserTokenId] = useState(null);\n    const [isLoading, setIsloading] = useState(true);\n\n\n\n\n    const storeToken = async (data) => {\n        try {\n            await AsyncStorage.setItem(\"userData\", data);\n        } catch (error) {\n            console.log(\"Something went wrong\", error);\n        }\n    }\n\n    const remove = async () => {\n        try {\n            await AsyncStorage.removeItem('userData');\n        }catch (e) {\n            console.log(e);\n        }finally {\n            setUser('')\n        }\n    }\n  return (\n    <AuthContext.Provider value={{\n        user,\n        setUser,\n        login: async(email, password) => {\n            await apiUrl.post('users/login', {\n                email: email,\n                password: password\n            }).then(response => {\n                console.log(response.data)\n\n              if (response.data.code == 208) {\n                  ToastAndroid.showWithGravity('Email/Mot de passe incorrect', ToastAndroid.LONG, ToastAndroid.TOP)\n              } else if (response.data.code == 200)  {\n                  console.log(\"connecter\")\n                     // ToastAndroid.showWithGravity(' Vous etes bien connecté...', ToastAndroid.LONG, ToastAndroid.TOP)\n                      storeToken(JSON.stringify(response.data))\n                      setUser(JSON.stringify(response.data))\n                      console.log(\"Login data: \"+ user)\n\n              } else if (response.data.code == 210)  {\n                    ToastAndroid.showWithGravity('Email/Mot de passe incorrect ', ToastAndroid.LONG, ToastAndroid.TOP)\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n        },\n        register: async (firstName, lastName, telephone, adresse, email, personneContacter, selectedValue, password) => {\n              const registerData = {\n                  firstName: firstName,\n                  lastName: lastName,\n                  telephone: telephone,\n                  adresse: adresse,\n                  email: email,\n                  personneContacter: personneContacter,\n                  selectedValue: selectedValue,\n                  password: password\n              }\n                await apiUrl.post('users/register', registerData).then(response => {\n\n                    if ( response.data.code == 300 ) {\n                        console.log(response.data)\n                        ToastAndroid.showWithGravity(' Verifiez votre connexion internet svp...', ToastAndroid.LONG, ToastAndroid.TOP)\n\n                    } else {\n                        if (response.data.code == 302) {\n                            //ToastAndroid.showWithGravity(' Votre compte a bien été crée...', ToastAndroid.LONG, ToastAndroid.TOP)\n                            console.log(\"compte a été creé\")\n                        }\n                    }\n                }).catch(error => {\n                    console.log(error)\n                });\n\n        },\n        logout: async () => {\n            await remove();\n        },\n        userInfos: async (id) => {\n            await apiUrl.get(\"users/:id\", {\n                params: {\n                    id: id\n                }\n\n            }).then(response => {\n                console.log(response.data)\n            }).catch(e => {\n                console.log(e)\n            })\n        },\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}