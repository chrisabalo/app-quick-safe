{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport Icon from \"../Icon\";\nimport { withTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/colors\";\nvar defaultSize = 64;\n\nvar Avatar = function Avatar(_ref) {\n  var icon = _ref.icon,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, [\"icon\", \"size\", \"style\", \"theme\"]);\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? theme.colors.primary : _ref2$backgroundColor,\n    restStyle = _objectWithoutProperties(_ref2, [\"backgroundColor\"]);\n  var textColor = rest.color || (color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, styles.container, restStyle]\n  }, rest), React.createElement(Icon, {\n    source: icon,\n    color: textColor,\n    size: size * 0.6\n  }));\n};\nAvatar.displayName = 'Avatar.Icon';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default withTheme(Avatar);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;AACA,SAASC,KAAT;AAGA,IAAMC,WAAW,GAAG,EAApB;;AAyCA,IAAMC,MAAM,GAAG,SAATA,MAAM,CAAGC,MAAgE;EAAA,IAA7DC,IAAF,GAA+DD,KAA7DC,IAAF;IAAA,YAA+DD,KAAvDE,IAAI;IAAJA,IAAI,0BAAGJ,WAAf;IAA4BK,KAA5B,GAA+DH,KAAnCG,KAA5B;IAAmCC,QAA4BJ,KAA5BI;IAAUC,IAAkB;EAC7E,YACEC,UAAU,CAACC,OAAX,CAAmBJ,KAAnB,KAA6B,EAD/B;IAAA,8BAAQK,eAAe;IAAfA,eAAe,sCAAGJ,KAAK,CAACK,MAAN,CAAaC;IAAYC,SAAnD;EAEA,IAAMC,SAAS,GACbP,IAAI,CAACX,KAAL,KACCA,KAAK,CAACc,eAAD,CAAL,CAAuBK,OAAvB,KAAmC,oBAAnC,GAA0DhB,KAD3D,CADF;EAIA,OACEJ,oBAACqB,IAAD;IACEX,KAAK,EAAE,CACL;MACEY,KAAK,EAAEb,IADT;MAEEc,MAAM,EAAEd,IAFV;MAGEe,YAAY,EAAEf,IAAI,GAAG,CAHvB;MAIEM;IAJF,CADK,EAOLU,MAAM,CAACC,SAPF,EAQLR,SARK;EADT,GAWMN,IAXN,GAaEZ,oBAACE,IAAD;IAAMyB,MAAM,EAAEnB,IAAd;IAAoBP,KAAK,EAAEkB,SAA3B;IAAsCV,IAAI,EAAEA,IAAI,GAAG;EAAnD,EAbF,CADF;AAiBD,CAxBD;AA0BAH,MAAM,CAACsB,WAAP,GAAqB,aAArB;AAEA,IAAMH,MAAM,GAAGZ,UAAU,CAACgB,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,cAAc,EAAE,QADP;IAETC,UAAU,EAAE;EAFH;AADoB,CAAlB,CAAf;AAOA,eAAe5B,SAAS,CAACG,MAAD,CAAxB","names":["React","color","Icon","withTheme","white","defaultSize","Avatar","_ref","icon","size","style","theme","rest","StyleSheet","flatten","backgroundColor","colors","primary","restStyle","textColor","isLight","View","width","height","borderRadius","styles","container","source","displayName","create","justifyContent","alignItems"],"sources":["AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\nimport Icon from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport type { IconSource } from './../Icon';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ||\n    (color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"]},"metadata":{},"sourceType":"module"}