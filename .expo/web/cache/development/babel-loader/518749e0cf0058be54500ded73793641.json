{"ast":null,"code":"\nexport var LocationAccuracy;\n(function (LocationAccuracy) {\n  LocationAccuracy[LocationAccuracy[\"Lowest\"] = 1] = \"Lowest\";\n  LocationAccuracy[LocationAccuracy[\"Low\"] = 2] = \"Low\";\n  LocationAccuracy[LocationAccuracy[\"Balanced\"] = 3] = \"Balanced\";\n  LocationAccuracy[LocationAccuracy[\"High\"] = 4] = \"High\";\n  LocationAccuracy[LocationAccuracy[\"Highest\"] = 5] = \"Highest\";\n  LocationAccuracy[LocationAccuracy[\"BestForNavigation\"] = 6] = \"BestForNavigation\";\n})(LocationAccuracy || (LocationAccuracy = {}));\nexport var LocationActivityType;\n(function (LocationActivityType) {\n  LocationActivityType[LocationActivityType[\"Other\"] = 1] = \"Other\";\n  LocationActivityType[LocationActivityType[\"AutomotiveNavigation\"] = 2] = \"AutomotiveNavigation\";\n  LocationActivityType[LocationActivityType[\"Fitness\"] = 3] = \"Fitness\";\n  LocationActivityType[LocationActivityType[\"OtherNavigation\"] = 4] = \"OtherNavigation\";\n  LocationActivityType[LocationActivityType[\"Airborne\"] = 5] = \"Airborne\";\n})(LocationActivityType || (LocationActivityType = {}));\nexport var LocationGeofencingEventType;\n(function (LocationGeofencingEventType) {\n  LocationGeofencingEventType[LocationGeofencingEventType[\"Enter\"] = 1] = \"Enter\";\n  LocationGeofencingEventType[LocationGeofencingEventType[\"Exit\"] = 2] = \"Exit\";\n})(LocationGeofencingEventType || (LocationGeofencingEventType = {}));\nexport var LocationGeofencingRegionState;\n(function (LocationGeofencingRegionState) {\n  LocationGeofencingRegionState[LocationGeofencingRegionState[\"Unknown\"] = 0] = \"Unknown\";\n  LocationGeofencingRegionState[LocationGeofencingRegionState[\"Inside\"] = 1] = \"Inside\";\n  LocationGeofencingRegionState[LocationGeofencingRegionState[\"Outside\"] = 2] = \"Outside\";\n})(LocationGeofencingRegionState || (LocationGeofencingRegionState = {}));","map":{"version":3,"mappings":";AAKA,WAAYA,gBAOX;AAPD,WAAYA,gBAAgB;EAC1BA,2DAAU;EACVA,qDAAO;EACPA,+DAAY;EACZA,uDAAQ;EACRA,6DAAW;EACXA,iFAAqB;AACvB,CAAC,EAPWA,gBAAgB,KAAhBA,gBAAgB;AAY5B,WAAYC,oBAMX;AAND,WAAYA,oBAAoB;EAC9BA,iEAAS;EACTA,+FAAwB;EACxBA,qEAAW;EACXA,qFAAmB;EACnBA,uEAAY;AACd,CAAC,EANWA,oBAAoB,KAApBA,oBAAoB;AAWhC,WAAYC,2BAGX;AAHD,WAAYA,2BAA2B;EACrCA,+EAAS;EACTA,6EAAQ;AACV,CAAC,EAHWA,2BAA2B,KAA3BA,2BAA2B;AAQvC,WAAYC,6BAIX;AAJD,WAAYA,6BAA6B;EACvCA,uFAAW;EACXA,qFAAU;EACVA,uFAAW;AACb,CAAC,EAJWA,6BAA6B,KAA7BA,6BAA6B","names":["LocationAccuracy","LocationActivityType","LocationGeofencingEventType","LocationGeofencingRegionState"],"sourceRoot":"","sources":["../src/Location.types.ts"],"sourcesContent":["import { PermissionResponse as UMPermissionResponse } from 'expo-modules-core';\n\n/**\n * Enum with available location accuracies.\n */\nexport enum LocationAccuracy {\n  Lowest = 1,\n  Low = 2,\n  Balanced = 3,\n  High = 4,\n  Highest = 5,\n  BestForNavigation = 6,\n}\n\n/**\n * Enum with available activity types of background location tracking.\n */\nexport enum LocationActivityType {\n  Other = 1,\n  AutomotiveNavigation = 2,\n  Fitness = 3,\n  OtherNavigation = 4,\n  Airborne = 5,\n}\n\n/**\n * A type of the event that geofencing task can receive.\n */\nexport enum LocationGeofencingEventType {\n  Enter = 1,\n  Exit = 2,\n}\n\n/**\n * State of the geofencing region that you receive through the geofencing task.\n */\nexport enum LocationGeofencingRegionState {\n  Unknown = 0,\n  Inside = 1,\n  Outside = 2,\n}\n\n/**\n * Type representing options argument in `getCurrentPositionAsync`.\n */\nexport type LocationOptions = {\n  /**\n   * Location manager accuracy. Pass one of `LocationAccuracy` enum values.\n   * For low-accuracies the implementation can avoid geolocation providers\n   * that consume a significant amount of power (such as GPS).\n   */\n  accuracy?: LocationAccuracy;\n\n  /**\n   * (Android only) Specifies whether to ask the user to turn on improved accuracy location mode\n   * which uses Wi-Fi, cell networks and GPS sensor. Defaults to `true`.\n   */\n  mayShowUserSettingsDialog?: boolean;\n\n  /**\n   * (Android only) Minimum time to wait between each update in milliseconds.\n   * Default value may depend on `accuracy` option.\n   */\n  timeInterval?: number;\n\n  /**\n   * Receive updates only when the location has changed by at least this distance in meters.\n   * Default value may depend on `accuracy` option.\n   */\n  distanceInterval?: number;\n};\n\n/**\n * Type representing options object that can be passed to `getLastKnownPositionAsync`.\n */\nexport type LocationLastKnownOptions = {\n  /**\n   * Maximum age of the location in miliseconds.\n   */\n  maxAge?: number;\n\n  /**\n   * Maximum radius of horizontal accuracy in meters.\n   */\n  requiredAccuracy?: number;\n};\n\n/**\n * Type representing background location task options.\n */\nexport type LocationTaskOptions = LocationOptions & {\n  showsBackgroundLocationIndicator?: boolean; // iOS only\n  deferredUpdatesDistance?: number;\n  deferredUpdatesTimeout?: number;\n  deferredUpdatesInterval?: number;\n\n  // iOS only\n  activityType?: LocationActivityType;\n  pausesUpdatesAutomatically?: boolean;\n\n  foregroundService?: {\n    notificationTitle: string;\n    notificationBody: string;\n    notificationColor?: string;\n  };\n};\n\n/**\n * Type representing geofencing region object.\n */\nexport type LocationRegion = {\n  identifier?: string;\n  latitude: number;\n  longitude: number;\n  radius: number;\n  notifyOnEnter?: boolean;\n  notifyOnExit?: boolean;\n};\n\n/**\n * Type representing the location object.\n */\nexport type LocationObject = {\n  coords: {\n    latitude: number;\n    longitude: number;\n    altitude: number | null;\n    accuracy: number | null;\n    altitudeAccuracy: number | null;\n    heading: number | null;\n    speed: number | null;\n  };\n  timestamp: number;\n};\n\n/**\n * Represents `watchPositionAsync` callback.\n */\nexport type LocationCallback = (location: LocationObject) => any;\n\n/**\n * Represents the object containing details about location provider.\n */\nexport type LocationProviderStatus = {\n  locationServicesEnabled: boolean;\n  backgroundModeEnabled: boolean;\n  gpsAvailable?: boolean;\n  networkAvailable?: boolean;\n  passiveAvailable?: boolean;\n};\n\n/**\n * Type of the object containing heading details and provided by `watchHeadingAsync` callback.\n */\nexport type LocationHeadingObject = {\n  trueHeading: number;\n  magHeading: number;\n  accuracy: number;\n};\n\n/**\n * Represents `watchHeadingAsync` callback.\n */\nexport type LocationHeadingCallback = (location: LocationHeadingObject) => any;\n\n/**\n * An object of options for forward and reverse geocoding.\n */\nexport type LocationGeocodingOptions = {\n  /**\n   * Whether to force using Google Maps API instead of the native implementation.\n   * Used by default only on Web platform. Requires providing an API key by `setGoogleApiKey`.\n   */\n  useGoogleMaps?: boolean;\n};\n\n/**\n * Type representing a result of `geocodeAsync`.\n */\nexport type LocationGeocodedLocation = {\n  latitude: number;\n  longitude: number;\n  altitude?: number;\n  accuracy?: number;\n};\n\n/**\n * Type representing a result of `reverseGeocodeAsync`.\n */\nexport type LocationGeocodedAddress = {\n  city: string | null;\n  district: string | null;\n  street: string | null;\n  region: string | null;\n  subregion: string | null;\n  country: string | null;\n  postalCode: string | null;\n  name: string | null;\n  isoCountryCode: string | null;\n  timezone: string | null;\n};\n\n/**\n * Represents subscription object returned by methods watching for new locations or headings.\n */\nexport type LocationSubscription = {\n  remove: () => void;\n};\n\nexport type PermissionDetailsLocationIOS = {\n  scope: 'whenInUse' | 'always' | 'none';\n};\n\nexport type PermissionDetailsLocationAndroid = {\n  /**\n   * @deprecated use `accuracy` instead\n   */\n  scope: 'fine' | 'coarse' | 'none';\n\n  accuracy: 'fine' | 'coarse' | 'none';\n};\n\nexport interface LocationPermissionResponse extends UMPermissionResponse {\n  ios?: PermissionDetailsLocationIOS;\n  android?: PermissionDetailsLocationAndroid;\n}\n"]},"metadata":{},"sourceType":"module"}