{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"E:\\\\local\\\\app-quick-safe\\\\node_modules\\\\react-native-elements\\\\src\\\\tooltip\\\\Tooltip.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { withTheme } from \"../config\";\nimport { ScreenWidth, ScreenHeight, isIOS } from \"../helpers\";\nimport Triangle from \"./Triangle\";\nimport getTooltipCoordinate, { getElementVisibleWidth } from \"./getTooltipCoordinate\";\nvar Tooltip = function (_React$PureComponent) {\n  _inherits(Tooltip, _React$PureComponent);\n  var _super = _createSuper(Tooltip);\n  function Tooltip() {\n    var _this;\n    _classCallCheck(this, Tooltip);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isVisible: false,\n      yOffset: 0,\n      xOffset: 0,\n      elementWidth: 0,\n      elementHeight: 0\n    };\n    _this.toggleTooltip = function () {\n      var onClose = _this.props.onClose;\n      _this.getElementPosition();\n      _this.setState(function (prevState) {\n        if (prevState.isVisible) {\n          onClose && onClose();\n        }\n        return {\n          isVisible: !prevState.isVisible\n        };\n      });\n    };\n    _this.wrapWithPress = function (toggleOnPress, toggleAction, children) {\n      if (toggleOnPress) {\n        return React.createElement(TouchableOpacity, _extends({}, _defineProperty({}, toggleAction, _this.toggleTooltip), {\n          delayLongPress: 250,\n          activeOpacity: 1,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }), children);\n      }\n      return children;\n    };\n    _this.getTooltipStyle = function () {\n      var _objectSpread2;\n      var _this$state = _this.state,\n        yOffset = _this$state.yOffset,\n        xOffset = _this$state.xOffset,\n        elementHeight = _this$state.elementHeight,\n        elementWidth = _this$state.elementWidth;\n      var _this$props = _this.props,\n        height = _this$props.height,\n        backgroundColor = _this$props.backgroundColor,\n        width = _this$props.width,\n        withPointer = _this$props.withPointer,\n        containerStyle = _this$props.containerStyle;\n      var _getTooltipCoordinate = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer),\n        x = _getTooltipCoordinate.x,\n        y = _getTooltipCoordinate.y;\n      return _objectSpread((_objectSpread2 = {\n        position: 'absolute'\n      }, _defineProperty(_objectSpread2, I18nManager.isRTL ? 'right' : 'left', x), _defineProperty(_objectSpread2, \"top\", y), _defineProperty(_objectSpread2, \"width\", width), _defineProperty(_objectSpread2, \"height\", height), _defineProperty(_objectSpread2, \"backgroundColor\", backgroundColor), _defineProperty(_objectSpread2, \"display\", 'flex'), _defineProperty(_objectSpread2, \"alignItems\", 'center'), _defineProperty(_objectSpread2, \"justifyContent\", 'center'), _defineProperty(_objectSpread2, \"flex\", 1), _defineProperty(_objectSpread2, \"borderRadius\", 10), _defineProperty(_objectSpread2, \"padding\", 10), _objectSpread2), containerStyle);\n    };\n    _this.renderPointer = function (tooltipY) {\n      var _this$state2 = _this.state,\n        yOffset = _this$state2.yOffset,\n        xOffset = _this$state2.xOffset,\n        elementHeight = _this$state2.elementHeight,\n        elementWidth = _this$state2.elementWidth;\n      var _this$props2 = _this.props,\n        backgroundColor = _this$props2.backgroundColor,\n        pointerColor = _this$props2.pointerColor;\n      var pastMiddleLine = yOffset > tooltipY;\n      return React.createElement(View, {\n        style: _defineProperty({\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2\n        }, I18nManager.isRTL ? 'right' : 'left', xOffset + getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 - 7.5),\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, React.createElement(Triangle, {\n        style: {\n          borderBottomColor: pointerColor || backgroundColor\n        },\n        isDown: pastMiddleLine,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }));\n    };\n    _this.getTooltipHighlightedButtonStyle = function () {\n      var _ref3;\n      var highlightColor = _this.props.highlightColor;\n      var _this$state3 = _this.state,\n        yOffset = _this$state3.yOffset,\n        xOffset = _this$state3.xOffset,\n        elementWidth = _this$state3.elementWidth,\n        elementHeight = _this$state3.elementHeight;\n      return _ref3 = {\n        position: 'absolute',\n        top: yOffset\n      }, _defineProperty(_ref3, I18nManager.isRTL ? 'right' : 'left', xOffset), _defineProperty(_ref3, \"backgroundColor\", highlightColor), _defineProperty(_ref3, \"overflow\", 'visible'), _defineProperty(_ref3, \"width\", elementWidth), _defineProperty(_ref3, \"height\", elementHeight), _ref3;\n    };\n    _this.renderTouchableHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return React.createElement(TouchableOpacity, {\n        testID: \"tooltipTouchableHighlightedButton\",\n        onPress: function onPress() {\n          return _this.toggleTooltip();\n        },\n        style: TooltipHighlightedButtonStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, _this.props.children);\n    };\n    _this.renderStaticHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return React.createElement(View, {\n        style: TooltipHighlightedButtonStyle,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      }, _this.props.children);\n    };\n    _this.renderHighlightedButton = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderTouchableHighlightedButton();\n      } else {\n        return _this.renderStaticHighlightedButton();\n      }\n    };\n    _this.renderContent = function (withTooltip) {\n      var _this$props3 = _this.props,\n        popover = _this$props3.popover,\n        withPointer = _this$props3.withPointer,\n        toggleOnPress = _this$props3.toggleOnPress,\n        toggleAction = _this$props3.toggleAction;\n      if (!withTooltip) {\n        return _this.wrapWithPress(toggleOnPress, toggleAction, _this.props.children);\n      }\n      var tooltipStyle = _this.getTooltipStyle();\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }\n      }, _this.renderHighlightedButton(), withPointer && _this.renderPointer(tooltipStyle.top), React.createElement(View, {\n        style: tooltipStyle,\n        testID: \"tooltipPopoverContainer\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, popover));\n    };\n    _this.getElementPosition = function () {\n      var skipAndroidStatusBar = _this.props.skipAndroidStatusBar;\n      _this.renderedElement && _this.renderedElement.measure(function (frameOffsetX, frameOffsetY, width, height, pageOffsetX, pageOffsetY) {\n        _this.setState({\n          xOffset: pageOffsetX,\n          yOffset: isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - StatusBar.currentHeight,\n          elementWidth: width,\n          elementHeight: height\n        });\n      });\n    };\n    _this.renderStaticModalContent = function () {\n      var _this$props4 = _this.props,\n        withOverlay = _this$props4.withOverlay,\n        overlayColor = _this$props4.overlayColor;\n      return React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.container(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.closeOnlyOnBackdropPressViewWrapper,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, _this.renderContent(true)));\n    };\n    _this.renderTogglingModalContent = function () {\n      var _this$props5 = _this.props,\n        withOverlay = _this$props5.withOverlay,\n        overlayColor = _this$props5.overlayColor;\n      return React.createElement(TouchableOpacity, {\n        style: styles.container(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 7\n        }\n      }, _this.renderContent(true));\n    };\n    _this.renderModalContent = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderStaticModalContent();\n      } else {\n        return _this.renderTogglingModalContent();\n      }\n    };\n    return _this;\n  }\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      requestAnimationFrame(this.getElementPosition);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isVisible = this.state.isVisible;\n      var _this$props6 = this.props,\n        onClose = _this$props6.onClose,\n        onOpen = _this$props6.onOpen,\n        ModalComponent = _this$props6.ModalComponent;\n      return React.createElement(View, {\n        collapsable: false,\n        ref: function ref(e) {\n          _this2.renderedElement = e;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 7\n        }\n      }, this.renderContent(false), React.createElement(ModalComponent, {\n        animationType: \"fade\",\n        visible: isVisible,\n        transparent: true,\n        onDismiss: onClose,\n        onShow: onOpen,\n        onRequestClose: onClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 9\n        }\n      }, this.renderModalContent()));\n    }\n  }]);\n  return Tooltip;\n}(React.PureComponent);\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n  closeOnlyOnBackdropPress: PropTypes.bool\n};\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false\n};\nvar styles = {\n  container: function container(withOverlay, overlayColor) {\n    return {\n      backgroundColor: withOverlay ? overlayColor : 'transparent',\n      flex: 1\n    };\n  },\n  closeOnlyOnBackdropPressViewWrapper: {\n    position: 'absolute'\n  }\n};\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');","map":{"version":3,"names":["React","Fragment","PropTypes","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","Tooltip","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","onClose","props","getElementPosition","setState","prevState","wrapWithPress","toggleOnPress","toggleAction","children","getTooltipStyle","height","backgroundColor","width","withPointer","containerStyle","x","y","position","I18nManager","isRTL","renderPointer","tooltipY","pointerColor","pastMiddleLine","top","borderBottomColor","getTooltipHighlightedButtonStyle","highlightColor","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","renderStaticHighlightedButton","renderHighlightedButton","closeOnlyOnBackdropPress","renderContent","withTooltip","popover","tooltipStyle","skipAndroidStatusBar","renderedElement","measure","frameOffsetX","frameOffsetY","pageOffsetX","pageOffsetY","StatusBar","currentHeight","renderStaticModalContent","withOverlay","overlayColor","styles","container","closeOnlyOnBackdropPressViewWrapper","renderTogglingModalContent","renderModalContent","requestAnimationFrame","onOpen","ModalComponent","e","PureComponent","propTypes","element","bool","oneOf","number","oneOfType","string","object","array","func","elementType","defaultProps","Modal","flex"],"sources":["E:/local/app-quick-safe/node_modules/react-native-elements/src/tooltip/Tooltip.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Modal,\n  View,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\n\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, {\n  getElementVisibleWidth,\n} from './getTooltipCoordinate';\n\nclass Tooltip extends React.PureComponent {\n  state = {\n    isVisible: false,\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0,\n  };\n\n  renderedElement;\n\n  toggleTooltip = () => {\n    const { onClose } = this.props;\n    this.getElementPosition();\n    this.setState((prevState) => {\n      if (prevState.isVisible) {\n        onClose && onClose();\n      }\n\n      return { isVisible: !prevState.isVisible };\n    });\n  };\n\n  wrapWithPress = (toggleOnPress, toggleAction, children) => {\n    if (toggleOnPress) {\n      return (\n        <TouchableOpacity\n          {...{ [toggleAction]: this.toggleTooltip }}\n          delayLongPress={250}\n          activeOpacity={1}\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n\n    return children;\n  };\n\n  getTooltipStyle = () => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const {\n      height,\n      backgroundColor,\n      width,\n      withPointer,\n      containerStyle,\n    } = this.props;\n\n    const { x, y } = getTooltipCoordinate(\n      xOffset,\n      yOffset,\n      elementWidth,\n      elementHeight,\n      ScreenWidth,\n      ScreenHeight,\n      width,\n      height,\n      withPointer\n    );\n\n    return {\n      position: 'absolute',\n      [I18nManager.isRTL ? 'right' : 'left']: x,\n      top: y,\n      width,\n      height,\n      backgroundColor,\n      // default styles\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n      borderRadius: 10,\n      padding: 10,\n      ...containerStyle,\n    };\n  };\n\n  renderPointer = (tooltipY) => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { backgroundColor, pointerColor } = this.props;\n    const pastMiddleLine = yOffset > tooltipY;\n\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n          [I18nManager.isRTL ? 'right' : 'left']:\n            xOffset +\n            getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n            7.5,\n        }}\n      >\n        <Triangle\n          style={{ borderBottomColor: pointerColor || backgroundColor }}\n          isDown={pastMiddleLine}\n        />\n      </View>\n    );\n  };\n  getTooltipHighlightedButtonStyle = () => {\n    const { highlightColor } = this.props;\n    const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n    return {\n      position: 'absolute',\n      top: yOffset,\n      [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n      backgroundColor: highlightColor,\n      overflow: 'visible',\n      width: elementWidth,\n      height: elementHeight,\n    };\n  };\n  renderTouchableHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <TouchableOpacity\n        testID=\"tooltipTouchableHighlightedButton\"\n        onPress={() => this.toggleTooltip()}\n        style={TooltipHighlightedButtonStyle}\n      >\n        {this.props.children}\n      </TouchableOpacity>\n    );\n  };\n  renderStaticHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>\n    );\n  };\n\n  renderHighlightedButton = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderTouchableHighlightedButton();\n    } else {\n      return this.renderStaticHighlightedButton();\n    }\n  };\n\n  renderContent = (withTooltip) => {\n    const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n\n    if (!withTooltip) {\n      return this.wrapWithPress(\n        toggleOnPress,\n        toggleAction,\n        this.props.children\n      );\n    }\n\n    const tooltipStyle = this.getTooltipStyle();\n    return (\n      <View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>\n    );\n  };\n\n  componentDidMount() {\n    // wait to compute onLayout values.\n    requestAnimationFrame(this.getElementPosition);\n  }\n\n  getElementPosition = () => {\n    const { skipAndroidStatusBar } = this.props;\n    this.renderedElement &&\n      this.renderedElement.measure(\n        (\n          frameOffsetX,\n          frameOffsetY,\n          width,\n          height,\n          pageOffsetX,\n          pageOffsetY\n        ) => {\n          this.setState({\n            xOffset: pageOffsetX,\n            yOffset:\n              isIOS || skipAndroidStatusBar\n                ? pageOffsetY\n                : pageOffsetY - StatusBar.currentHeight,\n            elementWidth: width,\n            elementHeight: height,\n          });\n        }\n      );\n  };\n\n  renderStaticModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <Fragment>\n        <TouchableOpacity\n          style={styles.container(withOverlay, overlayColor)}\n          onPress={this.toggleTooltip}\n          activeOpacity={1}\n        />\n        <View style={styles.closeOnlyOnBackdropPressViewWrapper}>\n          {this.renderContent(true)}\n        </View>\n      </Fragment>\n    );\n  };\n  renderTogglingModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={styles.container(withOverlay, overlayColor)}\n        onPress={this.toggleTooltip}\n        activeOpacity={1}\n      >\n        {this.renderContent(true)}\n      </TouchableOpacity>\n    );\n  };\n\n  renderModalContent = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderStaticModalContent();\n    } else {\n      return this.renderTogglingModalContent();\n    }\n  };\n\n  render() {\n    const { isVisible } = this.state;\n    const { onClose, onOpen, ModalComponent } = this.props;\n\n    return (\n      <View\n        collapsable={false}\n        ref={(e) => {\n          this.renderedElement = e;\n        }}\n      >\n        {this.renderContent(false)}\n        <ModalComponent\n          animationType=\"fade\"\n          visible={isVisible}\n          transparent\n          onDismiss={onClose}\n          onShow={onOpen}\n          onRequestClose={onClose}\n        >\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n  closeOnlyOnBackdropPress: PropTypes.bool,\n};\n\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: () => {},\n  onOpen: () => {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false,\n};\n\nconst styles = {\n  container: (withOverlay, overlayColor) => ({\n    backgroundColor: withOverlay ? overlayColor : 'transparent',\n    flex: 1,\n  }),\n  closeOnlyOnBackdropPressViewWrapper: {\n    position: 'absolute',\n  },\n};\n\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}