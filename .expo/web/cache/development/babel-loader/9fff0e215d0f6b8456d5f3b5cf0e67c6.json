{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _this = this,\n  _jsxFileName = \"E:\\\\local\\\\app-quick-safe\\\\node_modules\\\\react-native-elements\\\\src\\\\overlay\\\\Overlay.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { withTheme } from \"../config\";\nvar Overlay = function Overlay(_ref) {\n  var children = _ref.children,\n    backdropStyle = _ref.backdropStyle,\n    overlayStyle = _ref.overlayStyle,\n    onBackdropPress = _ref.onBackdropPress,\n    fullScreen = _ref.fullScreen,\n    ModalComponent = _ref.ModalComponent,\n    isVisible = _ref.isVisible,\n    rest = _objectWithoutProperties(_ref, [\"children\", \"backdropStyle\", \"overlayStyle\", \"onBackdropPress\", \"fullScreen\", \"ModalComponent\", \"isVisible\"]);\n  return React.createElement(ModalComponent, _extends({\n    visible: isVisible,\n    onRequestClose: onBackdropPress,\n    transparent: true\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: onBackdropPress,\n    testID: \"RNE__Overlay__backdrop\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    testID: \"backdrop\",\n    style: StyleSheet.flatten([styles.backdrop, backdropStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    pointerEvents: \"box-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.overlay, fullScreen && styles.fullscreen, overlayStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, children)));\n};\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  backdropStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onBackdropPress: PropTypes.func,\n  fullScreen: PropTypes.bool,\n  ModalComponent: PropTypes.elementType\n};\nOverlay.defaultProps = {\n  fullScreen: false,\n  onBackdropPress: function onBackdropPress() {\n    return null;\n  },\n  ModalComponent: Modal\n};\nvar styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, .4)'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%'\n  },\n  overlay: _objectSpread({\n    backgroundColor: 'white',\n    borderRadius: 3,\n    padding: 10\n  }, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0, 0, 0, .3)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowRadius: 4\n    }\n  }))\n});\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');","map":{"version":3,"names":["React","PropTypes","withTheme","Overlay","children","backdropStyle","overlayStyle","onBackdropPress","fullScreen","ModalComponent","isVisible","rest","StyleSheet","flatten","styles","backdrop","container","overlay","fullscreen","propTypes","element","isRequired","bool","oneOfType","object","array","func","elementType","defaultProps","Modal","create","position","top","left","width","height","justifyContent","alignItems","backgroundColor","flex","borderRadius","padding","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius"],"sources":["E:/local/app-quick-safe/node_modules/react-native-elements/src/overlay/Overlay.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n  Modal,\n} from 'react-native';\n\nimport { withTheme } from '../config';\n\nconst Overlay = ({\n  children,\n  backdropStyle,\n  overlayStyle,\n  onBackdropPress,\n  fullScreen,\n  ModalComponent,\n  isVisible,\n  ...rest\n}) => (\n  <ModalComponent\n    visible={isVisible}\n    onRequestClose={onBackdropPress}\n    transparent\n    {...rest}\n  >\n    <TouchableWithoutFeedback\n      onPress={onBackdropPress}\n      testID=\"RNE__Overlay__backdrop\"\n    >\n      <View\n        testID=\"backdrop\"\n        style={StyleSheet.flatten([styles.backdrop, backdropStyle])}\n      />\n    </TouchableWithoutFeedback>\n\n    <View style={styles.container} pointerEvents=\"box-none\">\n      <View\n        style={StyleSheet.flatten([\n          styles.overlay,\n          fullScreen && styles.fullscreen,\n          overlayStyle,\n        ])}\n      >\n        {children}\n      </View>\n    </View>\n  </ModalComponent>\n);\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  backdropStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onBackdropPress: PropTypes.func,\n  fullScreen: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n};\n\nOverlay.defaultProps = {\n  fullScreen: false,\n  onBackdropPress: () => null,\n  ModalComponent: Modal,\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, .4)',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%',\n  },\n  overlay: {\n    backgroundColor: 'white',\n    borderRadius: 3,\n    padding: 10,\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0, 0, 0, .3)',\n        shadowOffset: { width: 0, height: 1 },\n        shadowRadius: 4,\n      },\n    }),\n  },\n});\n\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}