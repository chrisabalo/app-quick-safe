{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"E:\\\\local\\\\app-quick-safe\\\\screens\\\\Agent\\\\MapScreen.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport MapView, { PROVIDER_GOOGLE } from \"react-native-maps\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Fontisto from \"@expo/vector-icons/Fontisto\";\nimport { markers } from \"../../model/mapData\";\nimport { useTheme } from '@react-navigation/native';\nvar _Dimensions$get = Dimensions.get(\"window\"),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar CARD_HEIGHT = 100;\nvar CARD_WIDTH = width * 0.8;\nvar SPACING_FOR_CARD_INSET = width * 0.1 - 10;\nvar MapScreen = function MapScreen() {\n  var theme = useTheme();\n  var initialMapState = {\n    markers: markers,\n    region: {\n      latitude: 22.62938671242907,\n      longitude: 88.4354486029795,\n      latitudeDelta: 0.04864195044303443,\n      longitudeDelta: 0.040142817690068\n    }\n  };\n  var _React$useState = React.useState(initialMapState),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  var mapIndex = 0;\n  var mapAnimation = new Animated.Value(0);\n  useEffect(function () {\n    mapAnimation.addListener(function (_ref) {\n      var value = _ref.value;\n      var index = Math.floor(value / CARD_WIDTH + 0.3);\n      if (index >= state.markers.length) {\n        index = state.markers.length - 1;\n      }\n      if (index <= 0) {\n        index = 0;\n      }\n      clearTimeout(regionTimeout);\n      var regionTimeout = setTimeout(function () {\n        if (mapIndex !== index) {\n          mapIndex = index;\n          var coordinate = state.markers[index].coordinate;\n          _map.current.animateToRegion(_objectSpread(_objectSpread({}, coordinate), {}, {\n            latitudeDelta: state.region.latitudeDelta,\n            longitudeDelta: state.region.longitudeDelta\n          }), 350);\n        }\n      }, 10);\n    });\n  });\n  var interpolations = state.markers.map(function (marker, index) {\n    var inputRange = [(index - 1) * CARD_WIDTH, index * CARD_WIDTH, (index + 1) * CARD_WIDTH];\n    var scale = mapAnimation.interpolate({\n      inputRange: inputRange,\n      outputRange: [1, 1.5, 1],\n      extrapolate: \"clamp\"\n    });\n    return {\n      scale: scale\n    };\n  });\n  var onMarkerPress = function onMarkerPress(mapEventData) {\n    var markerID = mapEventData._targetInst.return.key;\n    var x = markerID * CARD_WIDTH + markerID * 20;\n    if (Platform.OS === 'ios') {\n      x = x - SPACING_FOR_CARD_INSET;\n    }\n    _scrollView.current.scrollTo({\n      x: x,\n      y: 0,\n      animated: true\n    });\n  };\n  var _map = React.useRef(null);\n  var _scrollView = React.useRef(null);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    ref: _map,\n    initialRegion: state.region,\n    style: styles.container,\n    provider: PROVIDER_GOOGLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, state.markers.map(function (marker, index) {\n    var scaleStyle = {\n      transform: [{\n        scale: interpolations[index].scale\n      }]\n    };\n    return React.createElement(MapView.Marker, {\n      key: index,\n      coordinate: marker.coordinate,\n      onPress: function onPress(e) {\n        return onMarkerPress(e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles.markerWrap],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, React.createElement(Animated.Image, {\n      source: require(\"../../assets/map_marker.png\"),\n      style: [styles.marker, scaleStyle],\n      resizeMode: \"cover\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    })));\n  })), React.createElement(Animated.ScrollView, {\n    ref: _scrollView,\n    horizontal: true,\n    pagingEnabled: true,\n    scrollEventThrottle: 1,\n    showsHorizontalScrollIndicator: false,\n    snapToInterval: CARD_WIDTH + 20,\n    snapToAlignment: \"center\",\n    style: styles.scrollView,\n    contentInset: {\n      top: 0,\n      left: SPACING_FOR_CARD_INSET,\n      bottom: 0,\n      right: SPACING_FOR_CARD_INSET\n    },\n    contentContainerStyle: {\n      paddingHorizontal: Platform.OS === 'android' ? SPACING_FOR_CARD_INSET : 0\n    },\n    onScroll: Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: mapAnimation\n        }\n      }\n    }], {\n      useNativeDriver: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, state.markers.map(function (marker, index) {\n    return React.createElement(View, {\n      style: styles.card,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      style: styles.textContent,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      numberOfLines: 1,\n      style: styles.cardtitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, marker.title), React.createElement(Text, {\n      numberOfLines: 1,\n      style: styles.cardDescription,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, marker.description), React.createElement(View, {\n      style: styles.button,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {},\n      style: [styles.signIn, {\n        borderColor: '#FF6347',\n        borderWidth: 1\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.textSign, {\n        color: '#FF6347'\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, \"Intervenir\")))));\n  })), React.createElement(StatusBar, {\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }));\n};\nexport default MapScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  searchBox: {\n    position: 'absolute',\n    marginTop: Platform.OS === 'ios' ? 40 : 20,\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    width: '90%',\n    alignSelf: 'center',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  chipsScrollView: {\n    position: 'absolute',\n    top: Platform.OS === 'ios' ? 90 : 80,\n    paddingHorizontal: 10\n  },\n  chipsIcon: {\n    marginRight: 5\n  },\n  chipsItem: {\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH\n  },\n  card: {\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      x: 2,\n      y: -2\n    },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\"\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\"\n  },\n  textContent: {\n    flex: 2,\n    padding: 10\n  },\n  cardtitle: {\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\"\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 50,\n    height: 50\n  },\n  marker: {\n    width: 30,\n    height: 30\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 5\n  },\n  signIn: {\n    width: '100%',\n    padding: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3\n  },\n  textSign: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useEffect","MapView","PROVIDER_GOOGLE","Ionicons","MaterialCommunityIcons","Fontisto","markers","useTheme","Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","SPACING_FOR_CARD_INSET","MapScreen","theme","initialMapState","region","latitude","longitude","latitudeDelta","longitudeDelta","useState","state","setState","mapIndex","mapAnimation","Animated","Value","addListener","value","index","Math","floor","length","clearTimeout","regionTimeout","setTimeout","coordinate","_map","current","animateToRegion","interpolations","map","marker","inputRange","scale","interpolate","outputRange","extrapolate","onMarkerPress","mapEventData","markerID","_targetInst","return","key","x","Platform","OS","_scrollView","scrollTo","y","animated","useRef","styles","container","scaleStyle","transform","e","markerWrap","require","scrollView","top","left","bottom","right","paddingHorizontal","event","nativeEvent","contentOffset","useNativeDriver","card","textContent","cardtitle","title","cardDescription","description","button","signIn","borderColor","borderWidth","textSign","color","StyleSheet","create","flex","searchBox","position","marginTop","flexDirection","backgroundColor","alignSelf","borderRadius","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","chipsScrollView","chipsIcon","marginRight","chipsItem","marginHorizontal","paddingVertical","endPadding","paddingRight","borderTopLeftRadius","borderTopRightRadius","overflow","cardImage","fontSize","fontWeight","alignItems","justifyContent"],"sources":["E:/local/app-quick-safe/screens/Agent/MapScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  ScrollView,\n  Animated,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n  StatusBar,\n} from \"react-native\";\nimport MapView, {PROVIDER_GOOGLE} from \"react-native-maps\";\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Fontisto from 'react-native-vector-icons/Fontisto';\n\nimport { markers } from '../../model/mapData';\n\nimport { useTheme } from '@react-navigation/native';\n\nconst { width, height } = Dimensions.get(\"window\");\nconst CARD_HEIGHT = 100;\nconst CARD_WIDTH = width * 0.8;\nconst SPACING_FOR_CARD_INSET = width * 0.1 - 10;\n\nconst MapScreen = () => {\n  const theme = useTheme();\n\n  const initialMapState = {\n    markers,\n    region: {\n      latitude: 22.62938671242907,\n      longitude: 88.4354486029795,\n      latitudeDelta: 0.04864195044303443,\n      longitudeDelta: 0.040142817690068,\n    },\n  };\n\n  const [state, setState] = React.useState(initialMapState);\n\n  let mapIndex = 0;\n  let mapAnimation = new Animated.Value(0);\n\n  useEffect(() => {\n    mapAnimation.addListener(({ value }) => {\n      let index = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item\n      if (index >= state.markers.length) {\n        index = state.markers.length - 1;\n      }\n      if (index <= 0) {\n        index = 0;\n      }\n\n      clearTimeout(regionTimeout);\n\n      const regionTimeout = setTimeout(() => {\n        if( mapIndex !== index ) {\n          mapIndex = index;\n          const { coordinate } = state.markers[index];\n          _map.current.animateToRegion(\n            {\n              ...coordinate,\n              latitudeDelta: state.region.latitudeDelta,\n              longitudeDelta: state.region.longitudeDelta,\n            },\n            350\n          );\n        }\n      }, 10);\n    });\n  });\n\n  const interpolations = state.markers.map((marker, index) => {\n    const inputRange = [\n      (index - 1) * CARD_WIDTH,\n      index * CARD_WIDTH,\n      ((index + 1) * CARD_WIDTH),\n    ];\n\n    const scale = mapAnimation.interpolate({\n      inputRange,\n      outputRange: [1, 1.5, 1],\n      extrapolate: \"clamp\"\n    });\n\n    return { scale };\n  });\n\n  const onMarkerPress = (mapEventData) => {\n    const markerID = mapEventData._targetInst.return.key;\n\n    let x = (markerID * CARD_WIDTH) + (markerID * 20); \n    if (Platform.OS === 'ios') {\n      x = x - SPACING_FOR_CARD_INSET;\n    }\n\n    _scrollView.current.scrollTo({x: x, y: 0, animated: true});\n  }\n\n  const _map = React.useRef(null);\n  const _scrollView = React.useRef(null);\n\n  return (\n    <View style={styles.container}>\n      <MapView\n        ref={_map}\n        initialRegion={state.region}\n        style={styles.container}\n        provider={PROVIDER_GOOGLE}\n      >\n        {state.markers.map((marker, index) => {\n          const scaleStyle = {\n            transform: [\n              {\n                scale: interpolations[index].scale,\n              },\n            ],\n          };\n          return (\n            <MapView.Marker key={index} coordinate={marker.coordinate} onPress={(e)=>onMarkerPress(e)}>\n              <Animated.View style={[styles.markerWrap]}>\n                <Animated.Image\n                  source={require('../../assets/map_marker.png')}\n                  style={[styles.marker, scaleStyle]}\n                  resizeMode=\"cover\"\n                />\n              </Animated.View>\n            </MapView.Marker>\n          );\n        })}\n      </MapView>\n      \n      <Animated.ScrollView\n        ref={_scrollView}\n        horizontal\n        pagingEnabled\n        scrollEventThrottle={1}\n        showsHorizontalScrollIndicator={false}\n        snapToInterval={CARD_WIDTH + 20}\n        snapToAlignment=\"center\"\n        style={styles.scrollView}\n        contentInset={{\n          top: 0,\n          left: SPACING_FOR_CARD_INSET,\n          bottom: 0,\n          right: SPACING_FOR_CARD_INSET\n        }}\n        contentContainerStyle={{\n          paddingHorizontal: Platform.OS === 'android' ? SPACING_FOR_CARD_INSET : 0\n        }}\n        onScroll={Animated.event(\n          [\n            {\n              nativeEvent: {\n                contentOffset: {\n                  x: mapAnimation,\n                }\n              },\n            },\n          ],\n          {useNativeDriver: true}\n        )}\n      >\n        {state.markers.map((marker, index) =>(\n          <View style={styles.card} key={index}>\n            \n            <View style={styles.textContent}>\n              <Text numberOfLines={1} style={styles.cardtitle}>{marker.title}</Text>\n              <Text numberOfLines={1} style={styles.cardDescription}>{marker.description}</Text>\n              <View style={styles.button}>\n                <TouchableOpacity\n                  onPress={() => {}}\n                  style={[styles.signIn, {\n                    borderColor: '#FF6347',\n                    borderWidth: 1\n                  }]}\n                >\n                  <Text style={[styles.textSign, {\n                    color: '#FF6347'\n                  }]}>Intervenir</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        ))}\n      </Animated.ScrollView>\n      <StatusBar hidden={true} />\n    </View>\n  );\n};\n\nexport default MapScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  searchBox: {\n    position:'absolute', \n    marginTop: Platform.OS === 'ios' ? 40 : 20, \n    flexDirection:\"row\",\n    backgroundColor: '#fff',\n    width: '90%',\n    alignSelf:'center',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  chipsScrollView: {\n    position:'absolute', \n    top:Platform.OS === 'ios' ? 90 : 80, \n    paddingHorizontal:10\n  },\n  chipsIcon: {\n    marginRight: 5,\n  },\n  chipsItem: {\n    flexDirection:\"row\",\n    backgroundColor:'#fff', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH,\n  },\n  card: {\n    // padding: 10,\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: { x: 2, y: -2 },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n  },\n  textContent: {\n    flex: 2,\n    padding: 10,\n  },\n  cardtitle: {\n    fontSize: 12,\n    // marginTop: 5,\n    fontWeight: \"bold\",\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\",\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width:50,\n    height:50,\n  },\n  marker: {\n    width: 30,\n    height: 30,\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 5\n  },\n  signIn: {\n      width: '100%',\n      padding:5,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 3\n  },\n  textSign: {\n      fontSize: 14,\n      fontWeight: 'bold'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}