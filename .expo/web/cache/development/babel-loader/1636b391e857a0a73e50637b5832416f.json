{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"../IconButton\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\n\nvar DataTablePagination = function DataTablePagination(_ref) {\n  var label = _ref.label,\n    page = _ref.page,\n    numberOfPages = _ref.numberOfPages,\n    onPageChange = _ref.onPageChange,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, [\"label\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\"]);\n  var labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style]\n  }), React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 1\n  }, label), React.createElement(IconButton, {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n        color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: theme.colors.text,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    }\n  }), React.createElement(IconButton, {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n        color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    color: theme.colors.text,\n    disabled: page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    }\n  }));\n};\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 44\n  }\n});\nexport default withTheme(DataTablePagination);\n\nexport { DataTablePagination };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,SAASC,SAAT;AACA,OAAOC,qBAAP;;AA+EA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAGC,MAQf;EAAA,IAPXC,KAD2B,GAQhBD,KAPXC,KAD2B;IAE3BC,IAF2B,GAQhBF,KANXE,IAF2B;IAG3BC,aAH2B,GAQhBH,KALXG,aAH2B;IAI3BC,YAJ2B,GAQhBJ,KAJXI,YAJ2B;IAK3BC,KAL2B,GAQhBL,KAHXK,KAL2B;IAM3BC,QAEWN,KAFXM;IACGC,IACQ;EACX,IAAMC,UAAU,GAAGd,KAAK,CAACY,KAAK,CAACG,MAAN,CAAaC,IAAd,CAAL,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,GAA0CC,MAA1C,EAAnB;EAEA,OACEpB,oBAACqB,IAAD,eAAUP,IAAV;IAAgBF,KAAK,EAAE,CAACU,MAAM,CAACC,SAAR,EAAmBX,KAAnB;EAAvB,IACEZ,oBAACG,IAAD;IAAMS,KAAK,EAAE,CAACU,MAAM,CAACd,KAAR,EAAe;MAAEP,KAAK,EAAEc;IAAT,CAAf,CAAb;IAAoDS,aAAa,EAAE;EAAnE,GACGhB,KADH,CADF,EAIER,oBAACE,UAAD;IACEuB,IAAI,EAAE;MAAA,IAAGC,IAAF,SAAEA,IAAF;QAAQzB;MAAAA,OACbD,oBAACK,qBAAD;QACEsB,IAAI,EAAC,cADP;QAEE1B,KAAK,EAAEA,KAFT;QAGEyB,IAAI,EAAEA,IAHR;QAIEE,SAAS,EAAEC,WAAW,CAACC,KAAZ,GAAoB,KAApB,GAA4B;MAJzC,EAFJ;IAAA;IASE7B,KAAK,EAAEY,KAAK,CAACG,MAAN,CAAaC,IATtB;IAUEc,QAAQ,EAAEtB,IAAI,KAAK,CAVrB;IAWEuB,OAAO,EAAE;MAAA,OAAMrB,YAAY,CAACF,IAAI,GAAG,CAAR;IAAA;EAX7B,EAJF,EAiBET,oBAACE,UAAD;IACEuB,IAAI,EAAE;MAAA,IAAGC,IAAF,SAAEA,IAAF;QAAQzB;MAAAA,OACbD,oBAACK,qBAAD;QACEsB,IAAI,EAAC,eADP;QAEE1B,KAAK,EAAEA,KAFT;QAGEyB,IAAI,EAAEA,IAHR;QAIEE,SAAS,EAAEC,WAAW,CAACC,KAAZ,GAAoB,KAApB,GAA4B;MAJzC,EAFJ;IAAA;IASE7B,KAAK,EAAEY,KAAK,CAACG,MAAN,CAAaC,IATtB;IAUEc,QAAQ,EAAEtB,IAAI,KAAKC,aAAa,GAAG,CAVrC;IAWEsB,OAAO,EAAE;MAAA,OAAMrB,YAAY,CAACF,IAAI,GAAG,CAAR;IAAA;EAX7B,EAjBF,CADF;AAiCD,CA5CD;AA8CAH,mBAAmB,CAAC2B,WAApB,GAAkC,sBAAlC;AAEA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC/BZ,SAAS,EAAE;IACTa,cAAc,EAAE,UADP;IAETC,aAAa,EAAE,KAFN;IAGTC,UAAU,EAAE,QAHH;IAITC,WAAW,EAAE;EAJJ,CADoB;EAQ/B/B,KAAK,EAAE;IACLgC,QAAQ,EAAE,EADL;IAELC,WAAW,EAAE;EAFR;AARwB,CAAlB,CAAf;AAcA,eAAerC,SAAS,CAACE,mBAAD,CAAxB;;AAGA,SAASA,mBAAT","names":["React","color","IconButton","Text","withTheme","MaterialCommunityIcon","DataTablePagination","_ref","label","page","numberOfPages","onPageChange","style","theme","rest","labelColor","colors","text","alpha","rgb","string","View","styles","container","numberOfLines","icon","size","name","direction","I18nManager","isRTL","disabled","onPress","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","fontSize","marginRight"],"sources":["DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTablePagination = ({\n  label,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View {...rest} style={[styles.container, style]}>\n      <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n        {label}\n      </Text>\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n      />\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}