{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/colors\";\n\nvar AppbarContent = function AppbarContent(_ref) {\n  var _ref$color = _ref.color,\n    titleColor = _ref$color === void 0 ? white : _ref$color,\n    subtitle = _ref.subtitle,\n    subtitleStyle = _ref.subtitleStyle,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    titleRef = _ref.titleRef,\n    titleStyle = _ref.titleStyle,\n    theme = _ref.theme,\n    title = _ref.title,\n    rest = _objectWithoutProperties(_ref, [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleRef\", \"titleStyle\", \"theme\", \"title\"]);\n  var fonts = theme.fonts;\n  var subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    disabled: !onPress\n  }, React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest), React.createElement(Text, {\n    ref: titleRef,\n    style: [_objectSpread({\n      color: titleColor\n    }, Platform.OS === 'ios' ? fonts.regular : fonts.medium), styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityTraits: \"header\",\n\n    accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header'\n  }, title), subtitle ? React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null));\n};\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent);\n\nexport { AppbarContent };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP;AAEA,SAASC,SAAT;AACA,SAASC,KAAT;;AA+DA,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAGC,MAWT;EAAA,sBAVXL,KAAK;IAAEM,UAAU,2BAAGH,KADC;IAErBI,QAFqB,GAWVF,KATXE,QAFqB;IAGrBC,aAHqB,GAWVH,KARXG,aAHqB;IAIrBC,OAJqB,GAWVJ,KAPXI,OAJqB;IAKrBC,KALqB,GAWVL,KANXK,KALqB;IAMrBC,QANqB,GAWVN,KALXM,QANqB;IAOrBC,UAPqB,GAWVP,KAJXO,UAPqB;IAQrBC,KARqB,GAWVR,KAHXQ,KARqB;IASrBC,QAEWT,KAFXS;IACGC,IACQ;EAAA,IACHC,QAAUH,KAAlB,CAAQG;EAER,IAAMC,aAAa,GAAGjB,KAAK,CAACM,UAAD,CAAL,CAAkBY,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,GAAmCC,MAAnC,EAAtB;EAEA,OACErB,oBAACsB,wBAAD;IAA0BZ,OAAO,EAAEA,OAAnC;IAA4Ca,QAAQ,EAAE,CAACb;EAAvD,GACEV,oBAACwB,IAAD;IAAMb,KAAK,EAAE,CAACc,MAAM,CAACC,SAAR,EAAmBf,KAAnB;EAAb,GAA4CK,IAA5C,GACEhB,oBAACE,IAAD;IACEyB,GAAG,EAAEf,QADP;IAEED,KAAK,EAAE;MAEHV,KAAK,EAAEM;IAFJ,GAGCqB,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwBZ,KAAK,CAACa,OAA9B,GAAwCb,KAAK,CAACc,MAH/C,GAKLN,MAAM,CAACV,KALF,EAMLF,UANK,CAFT;IAUEmB,aAAa,EAAE,CAVjB;IAWEC,UAAU,MAXZ;IAYEC,mBAAmB,EAAC,QAZtB;;IAcEC,iBAAiB,EAAEP,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC;EAdzD,GAgBGd,KAhBH,CADF,EAmBGP,QAAQ,GACPR,oBAACE,IAAD;IACES,KAAK,EAAE,CAACc,MAAM,CAACjB,QAAR,EAAkB;MAAEP,KAAK,EAAEiB;IAAT,CAAlB,EAA4CT,aAA5C,CADT;IAEEuB,aAAa,EAAE;EAFjB,GAIGxB,QAJH,CADO,GAOL,IA1BN,CADF,CADF;AAgCD,CAhDD;AAkDAH,aAAa,CAAC+B,WAAd,GAA4B,gBAA5B;AAEA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CADG;IAETC,iBAAiB,EAAE;EAFV,CADoB;EAK/BzB,KAAK,EAAE;IACL0B,QAAQ,EAAEb,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;EADlC,CALwB;EAQ/BrB,QAAQ,EAAE;IACRiC,QAAQ,EAAEb,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B;EAD/B;AARqB,CAAlB,CAAf;AAaA,eAAe1B,SAAS,CAACE,aAAD,CAAxB;;AAGA,SAASA,aAAT","names":["React","color","Text","withTheme","white","AppbarContent","_ref","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","TouchableWithoutFeedback","disabled","View","styles","container","ref","Platform","OS","regular","medium","numberOfLines","accessible","accessibilityTraits","accessibilityRole","displayName","StyleSheet","create","flex","paddingHorizontal","fontSize"],"sources":["AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor = white,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  style,\n  titleRef,\n  titleStyle,\n  theme,\n  title,\n  ...rest\n}: Props) => {\n  const { fonts } = theme;\n\n  const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n\n  return (\n    <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n      <View style={[styles.container, style]} {...rest}>\n        <Text\n          ref={titleRef}\n          style={[\n            {\n              color: titleColor,\n              ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n            },\n            styles.title,\n            titleStyle,\n          ]}\n          numberOfLines={1}\n          accessible\n          accessibilityTraits=\"header\"\n          // @ts-ignore Type '\"heading\"' is not assignable to type ...\n          accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n        >\n          {title}\n        </Text>\n        {subtitle ? (\n          <Text\n            style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n            numberOfLines={1}\n          >\n            {subtitle}\n          </Text>\n        ) : null}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]},"metadata":{},"sourceType":"module"}