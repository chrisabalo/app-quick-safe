{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableRow = function DataTableRow(_ref) {\n  var onPress = _ref.onPress,\n    style = _ref.style,\n    theme = _ref.theme,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, [\"onPress\", \"style\", \"theme\", \"children\"]);\n  var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    onPress: onPress,\n    style: [styles.container, {\n      borderBottomColor: borderBottomColor\n    }, style]\n  }), React.createElement(View, {\n    style: styles.content\n  }, children));\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow);\n\nexport { DataTableRow };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAAA;AAAA;AAEA,OAAOC,eAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB;AACA,SAASC,SAAT;;AA+CA,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAGC,MAAyD;EAAA,IAAtDC,OAAF,GAAwDD,KAAtDC,OAAF;IAAWC,KAAX,GAAwDF,KAA7CE,KAAX;IAAkBC,KAAlB,GAAwDH,KAAtCG,KAAlB;IAAyBC,WAA+BJ,KAA/BI;IAAaC,IAAkB;EAC5E,IAAMC,iBAAiB,GAAGZ,KAAK,CAACS,KAAK,CAACI,IAAN,GAAaV,KAAb,GAAqBD,KAAtB,CAAL,CACvBY,KADuB,CACjB,IADiB,EAEvBC,GAFuB,GAGvBC,MAHuB,EAA1B;EAKA,OACEjB,oBAACE,eAAD,eACMU,IADN;IAEEJ,OAAO,EAAEA,OAFX;IAGEC,KAAK,EAAE,CAACS,MAAM,CAACC,SAAR,EAAmB;MAAEN;IAAF,CAAnB,EAA0CJ,KAA1C;EAHT,IAKET,oBAACoB,IAAD;IAAMX,KAAK,EAAES,MAAM,CAACG;EAApB,GAA8BV,QAA9B,CALF,CADF;AASD,CAfD;AAiBA,IAAMO,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,WAAW,EAAE,OADJ;IAETC,iBAAiB,EAAEH,UAAU,CAACI,aAFrB;IAGTC,SAAS,EAAE,EAHF;IAITC,iBAAiB,EAAE;EAJV,CADoB;EAO/BP,OAAO,EAAE;IACPQ,IAAI,EAAE,CADC;IAEPC,aAAa,EAAE;EAFR;AAPsB,CAAlB,CAAf;AAaA,eAAezB,SAAS,CAACC,YAAD,CAAxB;;AAGA,SAASA,YAAT","names":["React","color","TouchableRipple","black","white","withTheme","DataTableRow","_ref","onPress","style","theme","children","rest","borderBottomColor","dark","alpha","rgb","string","styles","container","View","content","StyleSheet","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"sources":["DataTableRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({ onPress, style, theme, children, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content}>{children}</View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}