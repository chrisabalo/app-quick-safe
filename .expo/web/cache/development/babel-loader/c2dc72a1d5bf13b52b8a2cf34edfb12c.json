{"ast":null,"code":"\n'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar ShareOpenGraphValueContainer = function () {\n  function ShareOpenGraphValueContainer(properties) {\n    _classCallCheck(this, ShareOpenGraphValueContainer);\n    _defineProperty(this, \"_properties\", void 0);\n    this._properties = properties ? properties : {};\n  }\n  _createClass(ShareOpenGraphValueContainer, [{\n    key: \"putNumber\",\n    value: function putNumber(key, number) {\n      this._properties[key] = {\n        type: 'number',\n        value: number\n      };\n    }\n  }, {\n    key: \"putObject\",\n    value: function putObject(key, object) {\n      this._properties[key] = {\n        type: 'open-graph-object',\n        value: object\n      };\n    }\n  }, {\n    key: \"putPhoto\",\n    value: function putPhoto(key, photo) {\n      this._properties[key] = {\n        type: 'photo',\n        value: photo\n      };\n    }\n  }, {\n    key: \"putString\",\n    value: function putString(key, string) {\n      this._properties[key] = {\n        type: 'string',\n        value: string\n      };\n    }\n  }, {\n    key: \"getEntry\",\n    value: function getEntry(key) {\n      return this._properties[key];\n    }\n  }]);\n  return ShareOpenGraphValueContainer;\n}();\nmodule.exports = ShareOpenGraphValueContainer;","map":{"version":3,"mappings":";AAuBA;;AAAA;AAAA;;;;;;;;;;;;;;;IAcMA,4BAAN;EAGEC,sCAAYC,UAAD,EAAmC;IAAA;IAAAC;IAC5C,KAAKC,WAAL,GAAmBF,UAAU,GAAGA,UAAH,GAAgB,EAA7C;EACD;EAAA;IAAA;IAAA,0BAKSG,GAAD,EAAcC,MAAd,EAA8B;MACrC,KAAKF,WAAL,CAAiBC,GAAjB,IAAwB;QAACE,IAAI,EAAE,QAAP;QAAiBC,KAAK,EAAEF;MAAxB,CAAxB;IACD;EAAA;IAAA;IAAA,0BAKSD,GAAD,EAAcI,MAAd,EAAoD;MAC3D,KAAKL,WAAL,CAAiBC,GAAjB,IAAwB;QAACE,IAAI,EAAE,mBAAP;QAA4BC,KAAK,EAAEC;MAAnC,CAAxB;IACD;EAAA;IAAA;IAAA,yBAKQJ,GAAD,EAAcK,KAAd,EAAiC;MACvC,KAAKN,WAAL,CAAiBC,GAAjB,IAAwB;QAACE,IAAI,EAAE,OAAP;QAAgBC,KAAK,EAAEE;MAAvB,CAAxB;IACD;EAAA;IAAA;IAAA,0BAKSL,GAAD,EAAcM,MAAd,EAA8B;MACrC,KAAKP,WAAL,CAAiBC,GAAjB,IAAwB;QAACE,IAAI,EAAE,QAAP;QAAiBC,KAAK,EAAEG;MAAxB,CAAxB;IACD;EAAA;IAAA;IAAA,yBAKQN,GAAD,EAA8B;MACpC,OAAO,KAAKD,WAAL,CAAiBC,GAAjB,CAAP;IACD;EAAA;EAAA;AAAA;AAGHO,MAAM,CAACC,OAAP,GAAiBb,4BAAjB","names":["ShareOpenGraphValueContainer","constructor","properties","_defineProperty","_properties","key","number","type","value","object","photo","string","module","exports"],"sources":["FBShareOpenGraphValueContainer.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {SharePhoto} from './FBSharePhoto';\n\ntype OpenGraphProperties = {[key: string]: OpenGraphValue};\ntype OpenGraphValue = {\n  type: OpenGraphValueType,\n  value: any,\n};\ntype OpenGraphValueType = 'number' | 'open-graph-object' | 'photo' | 'string';\n\n/**\n * Represents an interface for adding and retrieving values to open graph objects and actions.\n */\nclass ShareOpenGraphValueContainer {\n  _properties: OpenGraphProperties;\n\n  constructor(properties: ?OpenGraphProperties) {\n    this._properties = properties ? properties : {};\n  }\n\n  /**\n   * Sets a number for the specified key.\n   */\n  putNumber(key: string, number: number) {\n    this._properties[key] = {type: 'number', value: number};\n  }\n\n  /**\n   * Sets an open graph object for the specified key.\n   */\n  putObject(key: string, object: ShareOpenGraphValueContainer) {\n    this._properties[key] = {type: 'open-graph-object', value: object};\n  }\n\n  /**\n   * Sets a photo for the specified key.\n   */\n  putPhoto(key: string, photo: SharePhoto) {\n    this._properties[key] = {type: 'photo', value: photo};\n  }\n\n  /**\n   * Sets a string for the specified key.\n   */\n  putString(key: string, string: string) {\n    this._properties[key] = {type: 'string', value: string};\n  }\n\n  /**\n   * Gets an entry for the given key.\n   */\n  getEntry(key: string): OpenGraphValue {\n    return this._properties[key];\n  }\n}\n\nmodule.exports = ShareOpenGraphValueContainer;\n"]},"metadata":{},"sourceType":"script"}