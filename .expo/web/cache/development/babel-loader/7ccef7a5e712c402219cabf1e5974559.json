{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport { black, white } from \"../styles/colors\";\nimport { withTheme } from \"../core/theming\";\nvar defaultSize = 20;\n\nvar Badge = function Badge(_ref) {\n  var children = _ref.children,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    style = _ref.style,\n    theme = _ref.theme,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    rest = _objectWithoutProperties(_ref, [\"children\", \"size\", \"style\", \"theme\", \"visible\"]);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    opacity = _React$useRef.current;\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  }, [visible, opacity, scale]);\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? theme.colors.notification : _ref2$backgroundColor,\n    restStyle = _objectWithoutProperties(_ref2, [\"backgroundColor\"]);\n  var textColor = color(backgroundColor).isLight() ? black : white;\n  var borderRadius = size / 2;\n  return (\n    React.createElement(Animated.Text, _extends({\n      numberOfLines: 1,\n      style: [_objectSpread(_objectSpread({\n        opacity: opacity,\n        backgroundColor: backgroundColor,\n        color: textColor,\n        fontSize: size * 0.5\n      }, theme.fonts.regular), {}, {\n        lineHeight: size,\n        height: size,\n        minWidth: size,\n        borderRadius: borderRadius\n      }), styles.container, restStyle]\n    }, rest), children)\n  );\n};\nexport default withTheme(Badge);\nvar styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAAA;AAAA;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,KAAhB;AACA,SAASC,SAAT;AAEA,IAAMC,WAAW,GAAG,EAApB;;AAkDA,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAGC,MAOD;EAAA,IANXC,QADa,GAOFD,KANXC,QADa;IAAA,YAOFD,KALXE,IAAI;IAAJA,IAAI,0BAAGJ,WAFM;IAGbK,KAHa,GAOFH,KAJXG,KAHa;IAIbC,KAJa,GAOFJ,KAHXI,KAJa;IAAA,eAOFJ,KAFXK,OAAO;IAAPA,OAAO,6BAAG;IACPC,IACQ;EAAA,oBACkBb,KAAK,CAACc,MAAN,CAC3B,IAAIC,QAAQ,CAACC,KAAb,CAAmBJ,OAAO,GAAG,CAAH,GAAO,CAAjC,CAD2B,CAA7B;IAAiBK,wBAATC,OAAO;EAAA,IAKAC,QACXR,KAFJ,CACES,SAAS,CAAID;EAGfnB,KAAK,CAACqB,SAAN,CAAgB,YAAM;IACpBN,QAAQ,CAACO,MAAT,CAAgBL,OAAhB,EAAyB;MACvBM,OAAO,EAAEX,OAAO,GAAG,CAAH,GAAO,CADA;MAEvBY,QAAQ,EAAE,MAAML,KAFO;MAGvBM,eAAe,EAAE;IAHM,CAAzB,EAIGC,KAJH;EAKD,CAND,EAMG,CAACd,OAAD,EAAUK,OAAV,EAAmBE,KAAnB,CANH;EAQA,YACEQ,UAAU,CAACC,OAAX,CAAmBlB,KAAnB,KAA6B,EAD/B;IAAA,8BAAQmB,eAAe;IAAfA,eAAe,sCAAGlB,KAAK,CAACmB,MAAN,CAAaC;IAAiBC,SAAxD;EAEA,IAAMC,SAAS,GAAGhC,KAAK,CAAC4B,eAAD,CAAL,CAAuBK,OAAvB,KAAmChC,KAAnC,GAA2CC,KAA7D;EAEA,IAAMgC,YAAY,GAAG1B,IAAI,GAAG,CAA5B;EAEA;IAEET,oBAACe,QAAD,CAAUqB,IAAV;MACEC,aAAa,EAAE,CADjB;MAEE3B,KAAK,EAAE;QAEHO,OAFG,EAEHA,OAFG;QAGHY,eAHG,EAGHA,eAHG;QAIH5B,KAAK,EAAEgC,SAJJ;QAKHK,QAAQ,EAAE7B,IAAI,GAAG;MALd,GAMAE,KAAK,CAAC4B,KAAN,CAAYC,OANZ;QAOHC,UAAU,EAAEhC,IAPT;QAQHiC,MAAM,EAAEjC,IARL;QASHkC,QAAQ,EAAElC,IATP;QAUH0B;MAVG,IAYLS,MAAM,CAACC,SAZF,EAaLb,SAbK;IAFT,GAiBMnB,IAjBN,GAmBGL,QAnBH;EAAA;AAsBH,CAtDD;AAwDA,eAAeJ,SAAS,CAACE,KAAD,CAAxB;AAEA,IAAMsC,MAAM,GAAGjB,UAAU,CAACmB,MAAX,CAAkB;EAC/BD,SAAS,EAAE;IACTE,SAAS,EAAE,UADF;IAETC,SAAS,EAAE,QAFF;IAGTC,iBAAiB,EAAE,QAHV;IAITC,iBAAiB,EAAE,CAJV;IAKTC,QAAQ,EAAE;EALD;AADoB,CAAlB,CAAf","names":["React","color","black","white","withTheme","defaultSize","Badge","_ref","children","size","style","theme","visible","rest","useRef","Animated","Value","opacity","current","scale","animation","useEffect","timing","toValue","duration","useNativeDriver","start","StyleSheet","flatten","backgroundColor","colors","notification","restStyle","textColor","isLight","borderRadius","Text","numberOfLines","fontSize","fonts","regular","lineHeight","height","minWidth","styles","container","create","alignSelf","textAlign","textAlignVertical","paddingHorizontal","overflow"],"sources":["Badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\n\nconst defaultSize = 20;\n\ntype Props = React.ComponentProps<typeof Animated.Text> & {\n  /**\n   * Whether the badge is visible\n   */\n  visible: boolean;\n  /**\n   * Content of the `Badge`.\n   */\n  children?: string | number;\n  /**\n   * Size of the `Badge`.\n   */\n  size?: number;\n  style?: StyleProp<TextStyle>;\n  ref?: React.RefObject<typeof Animated.Text>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Badges are small status descriptors for UI elements.\n * A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-1.png\" />\n *     <figcaption>Badge with content</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/badge-2.png\" />\n *     <figcaption>Badge without content</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Badge } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Badge>3</Badge>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Badge = ({\n  children,\n  size = defaultSize,\n  style,\n  theme,\n  visible = true,\n  ...rest\n}: Props) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  React.useEffect(() => {\n    Animated.timing(opacity, {\n      toValue: visible ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  }, [visible, opacity, scale]);\n\n  const { backgroundColor = theme.colors.notification, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor = color(backgroundColor).isLight() ? black : white;\n\n  const borderRadius = size / 2;\n\n  return (\n    // @ts-ignore\n    <Animated.Text\n      numberOfLines={1}\n      style={[\n        {\n          opacity,\n          backgroundColor,\n          color: textColor,\n          fontSize: size * 0.5,\n          ...theme.fonts.regular,\n          lineHeight: size,\n          height: size,\n          minWidth: size,\n          borderRadius,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      {children}\n    </Animated.Text>\n  );\n};\n\nexport default withTheme(Badge);\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-end',\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingHorizontal: 4,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}