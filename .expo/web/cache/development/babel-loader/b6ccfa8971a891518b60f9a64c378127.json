{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nimport Button from \"./Button\";\nimport Icon from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\nimport shadow from \"../styles/shadow\";\nvar ELEVATION = 1;\nvar DEFAULT_MAX_WIDTH = 960;\n\nvar Banner = function Banner(_ref) {\n  var visible = _ref.visible,\n    icon = _ref.icon,\n    children = _ref.children,\n    actions = _ref.actions,\n    contentStyle = _ref.contentStyle,\n    style = _ref.style,\n    theme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, [\"visible\", \"icon\", \"children\", \"actions\", \"contentStyle\", \"style\", \"theme\"]);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    position = _React$useRef.current;\n  var _React$useState = React.useState({\n      height: 0,\n      measured: false\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [visible, position, scale]);\n  var handleLayout = function handleLayout(_ref3) {\n    var nativeEvent = _ref3.nativeEvent;\n    var height = nativeEvent.layout.height;\n    setLayout({\n      height: height,\n      measured: true\n    });\n  };\n\n  var height = Animated.multiply(position, layout.height);\n  var translateY = Animated.multiply(Animated.add(position, -1), layout.height);\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [styles.container, shadow(ELEVATION), style]\n  }), React.createElement(View, {\n    style: [styles.wrapper, contentStyle]\n  }, React.createElement(Animated.View, {\n    style: {\n      height: height\n    }\n  }), React.createElement(Animated.View, {\n    onLayout: handleLayout,\n    style: [layout.measured || !visible ?\n    [styles.absolute, {\n      transform: [{\n        translateY: translateY\n      }]\n    }] :\n    null, !layout.measured && !visible ?\n    {\n      opacity: 0\n    } : null]\n  }, React.createElement(View, {\n    style: styles.content\n  }, icon ? React.createElement(View, {\n    style: styles.icon\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 40\n  })) : null, React.createElement(Text, {\n    style: styles.message\n  }, children)), React.createElement(View, {\n    style: styles.actions\n  }, actions.map(function (_ref2, i) {\n    var label = _ref2.label,\n      others = _objectWithoutProperties(_ref2, [\"label\"]);\n    return React.createElement(Button, _extends({\n      key:\n      i,\n      compact: true,\n      mode: \"text\",\n      style: styles.button\n    }, others), label);\n  })))));\n};\nvar styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%'\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0\n  },\n  icon: {\n    margin: 8\n  },\n  message: {\n    flex: 1,\n    margin: 8\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4\n  },\n  button: {\n    margin: 4\n  }\n});\nexport default withTheme(Banner);","map":{"version":3,"mappings":"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","names":["React","Surface","Text","Button","Icon","withTheme","shadow","ELEVATION","DEFAULT_MAX_WIDTH","Banner","_ref","visible","icon","children","actions","contentStyle","style","theme","rest","useRef","Animated","Value","position","current","useState","height","measured","layout","setLayout","scale","animation","useEffect","timing","duration","toValue","useNativeDriver","start","handleLayout","nativeEvent","multiply","translateY","add","styles","container","View","wrapper","onLayout","absolute","transform","opacity","content","source","size","message","map","i","label","_ref2","others","key","compact","mode","button","StyleSheet","create","elevation","overflow","alignSelf","width","maxWidth","top","flexDirection","justifyContent","marginHorizontal","marginTop","marginBottom","margin","flex"],"sources":["Banner.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp, Animated } from 'react-native';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport Button from './Button';\nimport Icon, { IconSource } from './Icon';\nimport { withTheme } from '../core/theming';\nimport type { $RemoveChildren } from '../types';\nimport shadow from '../styles/shadow';\n\nconst ELEVATION = 1;\nconst DEFAULT_MAX_WIDTH = 960;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Whether banner is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Content that will be displayed inside banner.\n   */\n  children: string;\n  /**\n   * Icon to display for the `Banner`. Can be an image.\n   */\n  icon?: IconSource;\n  /**\n   * Action items to shown in the banner.\n   * An action item should contain the following properties:\n   *\n   * - `label`: label of the action button (required)\n   * - `onPress`: callback that is called when button is pressed (required)\n   *\n   * To customize button you can pass other props that button component takes.\n   */\n  actions: Array<{\n    label: string;\n    onPress: () => void;\n  }>;\n  /**\n   * Style of banner's inner content.\n   * Use this prop to apply custom width for wide layouts.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype NativeEvent = {\n  nativeEvent: {\n    layout: {\n      x: number;\n      y: number;\n      width: number;\n      height: number;\n    };\n  };\n};\n\n/**\n * Banner displays a prominent message and related actions.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/banner.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Image } from 'react-native';\n * import { Banner } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(true);\n *\n *   return (\n *     <Banner\n *       visible={visible}\n *       actions={[\n *         {\n *           label: 'Fix it',\n *           onPress: () => setVisible(false),\n *         },\n *         {\n *           label: 'Learn more',\n *           onPress: () => setVisible(false),\n *         },\n *       ]}\n *       icon={({size}) => (\n *         <Image\n *           source={{\n *             uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\n *           }}\n *           style={{\n *             width: size,\n *             height: size,\n *           }}\n *         />\n *       )}>\n *       There was a problem processing a transaction on your credit card.\n *     </Banner>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst Banner = ({\n  visible,\n  icon,\n  children,\n  actions,\n  contentStyle,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: position } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    measured: boolean;\n  }>({\n    height: 0,\n    measured: false,\n  });\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      // show\n      Animated.timing(position, {\n        duration: 250 * scale,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start();\n    } else {\n      // hide\n      Animated.timing(position, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: false,\n      }).start();\n    }\n  }, [visible, position, scale]);\n\n  const handleLayout = ({ nativeEvent }: NativeEvent) => {\n    const { height } = nativeEvent.layout;\n    setLayout({ height, measured: true });\n  };\n\n  // The banner animation has 2 parts:\n  // 1. Blank spacer element which animates its height to move the content\n  // 2. Actual banner which animates its translateY\n  // In initial render, we position everything normally and measure the height of the banner\n  // Once we have the height, we apply the height to the spacer and switch the banner to position: absolute\n  // We need this because we need to move the content below as if banner's height was being animated\n  // However we can't animated banner's height directly as it'll also resize the content inside\n  const height = Animated.multiply(position, layout.height);\n\n  const translateY = Animated.multiply(\n    Animated.add(position, -1),\n    layout.height\n  );\n  return (\n    <Surface\n      {...rest}\n      style={[styles.container, shadow(ELEVATION) as ViewStyle, style]}\n    >\n      <View style={[styles.wrapper, contentStyle]}>\n        <Animated.View style={{ height }} />\n        <Animated.View\n          onLayout={handleLayout}\n          style={[\n            layout.measured || !visible\n              ? // If we have measured banner's height or it's invisible,\n                // Position it absolutely, the layout will be taken care of the spacer\n                [styles.absolute, { transform: [{ translateY }] }]\n              : // Otherwise position it normally\n                null,\n            !layout.measured && !visible\n              ? // If we haven't measured banner's height yet and it's invisible,\n                // hide it with opacity: 0 so user doesn't see it\n                { opacity: 0 }\n              : null,\n          ]}\n        >\n          <View style={styles.content}>\n            {icon ? (\n              <View style={styles.icon}>\n                <Icon source={icon} size={40} />\n              </View>\n            ) : null}\n            <Text style={styles.message}>{children}</Text>\n          </View>\n          <View style={styles.actions}>\n            {actions.map(({ label, ...others }, i) => (\n              <Button\n                key={/* eslint-disable-line react/no-array-index-key */ i}\n                compact\n                mode=\"text\"\n                style={styles.button}\n                {...others}\n              >\n                {label}\n              </Button>\n            ))}\n          </View>\n        </Animated.View>\n      </View>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: ELEVATION,\n  },\n  wrapper: {\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '100%',\n    maxWidth: DEFAULT_MAX_WIDTH,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n  },\n  content: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginHorizontal: 8,\n    marginTop: 16,\n    marginBottom: 0,\n  },\n  icon: {\n    margin: 8,\n  },\n  message: {\n    flex: 1,\n    margin: 8,\n  },\n  actions: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    margin: 4,\n  },\n  button: {\n    margin: 4,\n  },\n});\n\nexport default withTheme(Banner);\n"]},"metadata":{},"sourceType":"module"}