{"ast":null,"code":"\n'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar ShareOpenGraphValueContainer = require(\"./FBShareOpenGraphValueContainer\");\nvar ShareOpenGraphObject = function (_ShareOpenGraphValueC) {\n  _inherits(ShareOpenGraphObject, _ShareOpenGraphValueC);\n  var _super = _createSuper(ShareOpenGraphObject);\n  function ShareOpenGraphObject() {\n    _classCallCheck(this, ShareOpenGraphObject);\n    return _super.apply(this, arguments);\n  }\n  return ShareOpenGraphObject;\n}(ShareOpenGraphValueContainer);\nmodule.exports = ShareOpenGraphObject;","map":{"version":3,"mappings":";AAuBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,IAAMA,4BAA4B,GAAGC,OAAO,oCAA5C;AAAA,IAKMC,oBAAN;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;AAAA,EAAmCF,4BAAnC;AAEAG,MAAM,CAACC,OAAP,GAAiBF,oBAAjB","names":["ShareOpenGraphValueContainer","require","ShareOpenGraphObject","module","exports"],"sources":["FBShareOpenGraphObject.js"],"sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst ShareOpenGraphValueContainer = require('./FBShareOpenGraphValueContainer');\n\n/**\n * Represents an open graph object.\n */\nclass ShareOpenGraphObject extends ShareOpenGraphValueContainer {}\n\nmodule.exports = ShareOpenGraphObject;\n"]},"metadata":{},"sourceType":"script"}