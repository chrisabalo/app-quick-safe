{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  NotifierComponents: true,\n  Notifier: true,\n  NotifierRoot: true,\n  Easing: true,\n  NotifierInterface: true\n};\nObject.defineProperty(exports, \"Notifier\", {\n  enumerable: true,\n  get: function get() {\n    return _Notifier.Notifier;\n  }\n});\nObject.defineProperty(exports, \"NotifierRoot\", {\n  enumerable: true,\n  get: function get() {\n    return _Notifier.NotifierRoot;\n  }\n});\nObject.defineProperty(exports, \"Easing\", {\n  enumerable: true,\n  get: function get() {\n    return _reactNative.Easing;\n  }\n});\nObject.defineProperty(exports, \"NotifierInterface\", {\n  enumerable: true,\n  get: function get() {\n    return _types.NotifierInterface;\n  }\n});\nexports.NotifierComponents = void 0;\nvar NotifierComponents = _interopRequireWildcard(require(\"./components\"));\nexports.NotifierComponents = NotifierComponents;\nvar _Notifier = require(\"./Notifier\");\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _NotifierWrapper = require(\"./NotifierWrapper\");\nObject.keys(_NotifierWrapper).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _NotifierWrapper[key];\n    }\n  });\n});\nvar _types = require(\"./types\");","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAGA;AACA;AACA;AAAAA;EAAA;EAAA;EAAAA;IAAAC;IAAAC;MAAA;IAAA;EAAA;AAAA;AACA","names":["Object","enumerable","get"],"sources":["index.tsx"],"sourcesContent":["import * as NotifierComponents from './components';\n\nexport { NotifierComponents };\nexport { Notifier, NotifierRoot } from './Notifier';\nexport { Easing } from 'react-native';\nexport * from './NotifierWrapper';\nexport { NotifierInterface } from './types';\n"]},"metadata":{},"sourceType":"script"}