{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NotifierRoot = exports.Notifier = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\nvar _Notifier = _interopRequireDefault(require(\"./Notifier.styles\"));\nvar _components = require(\"./components\");\nvar _constants = require(\"./constants\");\nvar _jsxFileName = \"/Users/seniv/code/react-native-notifier/src/Notifier.tsx\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n      result;\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar Notifier = {\n  showNotification: function showNotification() {},\n  hideNotification: function hideNotification() {},\n  clearQueue: function clearQueue() {}\n};\nexports.Notifier = Notifier;\nvar NotifierRoot = function (_React$PureComponent) {\n  (0, _inherits2.default)(NotifierRoot, _React$PureComponent);\n  var _super = _createSuper(NotifierRoot);\n  function NotifierRoot(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, NotifierRoot);\n    _this = _super.call(this, props);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"isShown\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"isHiding\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"hideTimer\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"showParams\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"callStack\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"hiddenComponentValue\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"translateY\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"translateYInterpolated\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onGestureEvent\", void 0);\n    _this.state = {\n      Component: _components.Notification,\n      swipeEnabled: _constants.DEFAULT_SWIPE_ENABLED,\n      componentProps: {}\n    };\n    _this.isShown = false;\n    _this.isHiding = false;\n    _this.hideTimer = null;\n    _this.showParams = null;\n    _this.callStack = [];\n    _this.hiddenComponentValue = -_constants.DEFAULT_COMPONENT_HEIGHT;\n    _this.translateY = new _reactNative.Animated.Value(_constants.MIN_TRANSLATE_Y);\n    _this.translateYInterpolated = _this.translateY.interpolate({\n      inputRange: [_constants.MIN_TRANSLATE_Y, _constants.MAX_TRANSLATE_Y],\n      outputRange: [_constants.MIN_TRANSLATE_Y, _constants.MAX_TRANSLATE_Y],\n      extrapolate: 'clamp'\n    });\n    _this.onGestureEvent = _reactNative.Animated.event([{\n      nativeEvent: {\n        translationY: _this.translateY\n      }\n    }], {\n      useNativeDriver: true\n    });\n    _this.onPress = _this.onPress.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onHandlerStateChange = _this.onHandlerStateChange.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onLayout = _this.onLayout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.showNotification = _this.showNotification.bind((0, _assertThisInitialized2.default)(_this));\n    _this.hideNotification = _this.hideNotification.bind((0, _assertThisInitialized2.default)(_this));\n    _this.clearQueue = _this.clearQueue.bind((0, _assertThisInitialized2.default)(_this));\n    Notifier.showNotification = _this.showNotification;\n    Notifier.hideNotification = _this.hideNotification;\n    Notifier.clearQueue = _this.clearQueue;\n    return _this;\n  }\n  (0, _createClass2.default)(NotifierRoot, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.hideTimer);\n    }\n  }, {\n    key: \"hideNotification\",\n    value: function hideNotification(callback) {\n      var _this$showParams$hide,\n        _this$showParams,\n        _this$showParams2,\n        _ref,\n        _this$showParams$hide2,\n        _this$showParams3,\n        _this$showParams4,\n        _this2 = this;\n      if (!this.isShown || this.isHiding) {\n        return;\n      }\n      _reactNative.Animated.timing(this.translateY, {\n        toValue: this.hiddenComponentValue,\n        easing: (_this$showParams$hide = (_this$showParams = this.showParams) === null || _this$showParams === void 0 ? void 0 : _this$showParams.hideEasing) !== null && _this$showParams$hide !== void 0 ? _this$showParams$hide : (_this$showParams2 = this.showParams) === null || _this$showParams2 === void 0 ? void 0 : _this$showParams2.easing,\n        duration: (_ref = (_this$showParams$hide2 = (_this$showParams3 = this.showParams) === null || _this$showParams3 === void 0 ? void 0 : _this$showParams3.hideAnimationDuration) !== null && _this$showParams$hide2 !== void 0 ? _this$showParams$hide2 : (_this$showParams4 = this.showParams) === null || _this$showParams4 === void 0 ? void 0 : _this$showParams4.animationDuration) !== null && _ref !== void 0 ? _ref : _constants.DEFAULT_ANIMATION_DURATION,\n        useNativeDriver: true\n      }).start(function (result) {\n        _this2.onHidden();\n        callback === null || callback === void 0 ? void 0 : callback(result);\n      });\n      this.onStartHiding();\n    }\n  }, {\n    key: \"showNotification\",\n    value: function showNotification(functionParams) {\n      var _this$props, _this$showParams$show, _this$showParams5, _this$showParams6, _ref2, _this$showParams$show2, _this$showParams7, _this$showParams8;\n      var params = _objectSpread({}, this.props, {}, functionParams, {\n        componentProps: _objectSpread({}, (_this$props = this.props) === null || _this$props === void 0 ? void 0 : _this$props.componentProps, {}, functionParams === null || functionParams === void 0 ? void 0 : functionParams.componentProps)\n      });\n      if (this.isShown) {\n        switch (params.queueMode) {\n          case 'standby':\n            {\n              this.callStack.push(params);\n              break;\n            }\n          case 'next':\n            {\n              this.callStack.unshift(params);\n              break;\n            }\n          case 'immediate':\n            {\n              this.callStack.unshift(params);\n              this.hideNotification();\n              break;\n            }\n          default:\n            {\n              this.callStack = [params];\n              this.hideNotification();\n              break;\n            }\n        }\n        return;\n      }\n      var title = params.title,\n        description = params.description,\n        swipeEnabled = params.swipeEnabled,\n        Component = params.Component,\n        componentProps = params.componentProps,\n        restParams = (0, _objectWithoutProperties2.default)(params, [\"title\", \"description\", \"swipeEnabled\", \"Component\", \"componentProps\"]);\n      this.setState({\n        title: title,\n        description: description,\n        Component: Component !== null && Component !== void 0 ? Component : _components.Notification,\n        swipeEnabled: swipeEnabled !== null && swipeEnabled !== void 0 ? swipeEnabled : _constants.DEFAULT_SWIPE_ENABLED,\n        componentProps: componentProps\n      });\n      this.showParams = restParams;\n      this.isShown = true;\n      this.setHideTimer();\n      this.translateY.setValue(-_constants.DEFAULT_COMPONENT_HEIGHT);\n      _reactNative.Animated.timing(this.translateY, {\n        toValue: _constants.MAX_TRANSLATE_Y,\n        easing: (_this$showParams$show = (_this$showParams5 = this.showParams) === null || _this$showParams5 === void 0 ? void 0 : _this$showParams5.showEasing) !== null && _this$showParams$show !== void 0 ? _this$showParams$show : (_this$showParams6 = this.showParams) === null || _this$showParams6 === void 0 ? void 0 : _this$showParams6.easing,\n        duration: (_ref2 = (_this$showParams$show2 = (_this$showParams7 = this.showParams) === null || _this$showParams7 === void 0 ? void 0 : _this$showParams7.showAnimationDuration) !== null && _this$showParams$show2 !== void 0 ? _this$showParams$show2 : (_this$showParams8 = this.showParams) === null || _this$showParams8 === void 0 ? void 0 : _this$showParams8.animationDuration) !== null && _ref2 !== void 0 ? _ref2 : _constants.DEFAULT_ANIMATION_DURATION,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"clearQueue\",\n    value: function clearQueue(hideDisplayedNotification) {\n      this.callStack = [];\n      if (hideDisplayedNotification) {\n        this.hideNotification();\n      }\n    }\n  }, {\n    key: \"setHideTimer\",\n    value: function setHideTimer() {\n      var _this$showParams9;\n      var _ref3 = (_this$showParams9 = this.showParams) !== null && _this$showParams9 !== void 0 ? _this$showParams9 : {},\n        _ref3$duration = _ref3.duration,\n        duration = _ref3$duration === void 0 ? _constants.DEFAULT_DURATION : _ref3$duration;\n      clearTimeout(this.hideTimer);\n      if (duration && !isNaN(duration)) {\n        this.hideTimer = setTimeout(this.hideNotification, duration);\n      }\n    }\n  }, {\n    key: \"onStartHiding\",\n    value: function onStartHiding() {\n      var _this$showParams10, _this$showParams10$on;\n      (_this$showParams10 = this.showParams) === null || _this$showParams10 === void 0 ? void 0 : (_this$showParams10$on = _this$showParams10.onStartHiding) === null || _this$showParams10$on === void 0 ? void 0 : _this$showParams10$on.call(_this$showParams10);\n      this.isHiding = true;\n      clearTimeout(this.hideTimer);\n    }\n  }, {\n    key: \"onHidden\",\n    value: function onHidden() {\n      var _this$showParams11, _this$showParams11$on;\n      (_this$showParams11 = this.showParams) === null || _this$showParams11 === void 0 ? void 0 : (_this$showParams11$on = _this$showParams11.onHidden) === null || _this$showParams11$on === void 0 ? void 0 : _this$showParams11$on.call(_this$showParams11);\n      this.isShown = false;\n      this.isHiding = false;\n      this.showParams = null;\n      this.translateY.setValue(_constants.MIN_TRANSLATE_Y);\n      var nextNotification = this.callStack.shift();\n      if (nextNotification) {\n        this.showNotification(nextNotification);\n      }\n    }\n  }, {\n    key: \"onHandlerStateChange\",\n    value: function onHandlerStateChange(_ref4) {\n      var _this$showParams$swip,\n        _this$showParams12,\n        _this$showParams13,\n        _this$showParams$swip2,\n        _this$showParams14,\n        _this3 = this;\n      var nativeEvent = _ref4.nativeEvent;\n      if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {\n        clearTimeout(this.hideTimer);\n      }\n      if (nativeEvent.oldState !== _reactNativeGestureHandler.State.ACTIVE) {\n        return;\n      }\n      this.setHideTimer();\n      var swipePixelsToClose = -((_this$showParams$swip = (_this$showParams12 = this.showParams) === null || _this$showParams12 === void 0 ? void 0 : _this$showParams12.swipePixelsToClose) !== null && _this$showParams$swip !== void 0 ? _this$showParams$swip : _constants.SWIPE_PIXELS_TO_CLOSE);\n      var isSwipedOut = nativeEvent.translationY < swipePixelsToClose;\n      _reactNative.Animated.timing(this.translateY, {\n        toValue: isSwipedOut ? this.hiddenComponentValue : _constants.MAX_TRANSLATE_Y,\n        easing: (_this$showParams13 = this.showParams) === null || _this$showParams13 === void 0 ? void 0 : _this$showParams13.swipeEasing,\n        duration: (_this$showParams$swip2 = (_this$showParams14 = this.showParams) === null || _this$showParams14 === void 0 ? void 0 : _this$showParams14.swipeAnimationDuration) !== null && _this$showParams$swip2 !== void 0 ? _this$showParams$swip2 : _constants.SWIPE_ANIMATION_DURATION,\n        useNativeDriver: true\n      }).start(function () {\n        if (isSwipedOut) {\n          _this3.onHidden();\n        }\n      });\n      if (isSwipedOut) {\n        this.onStartHiding();\n      }\n    }\n  }, {\n    key: \"onPress\",\n    value: function onPress() {\n      var _this$showParams15, _this$showParams15$on, _this$showParams16;\n      (_this$showParams15 = this.showParams) === null || _this$showParams15 === void 0 ? void 0 : (_this$showParams15$on = _this$showParams15.onPress) === null || _this$showParams15$on === void 0 ? void 0 : _this$showParams15$on.call(_this$showParams15);\n      if (((_this$showParams16 = this.showParams) === null || _this$showParams16 === void 0 ? void 0 : _this$showParams16.hideOnPress) !== false) {\n        this.hideNotification();\n      }\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n      var heightWithMargin = nativeEvent.layout.height + 50;\n      this.hiddenComponentValue = -Math.max(heightWithMargin, _constants.DEFAULT_COMPONENT_HEIGHT);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        title = _this$state.title,\n        description = _this$state.description,\n        swipeEnabled = _this$state.swipeEnabled,\n        Component = _this$state.Component,\n        componentProps = _this$state.componentProps;\n      return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, {\n        enabled: swipeEnabled,\n        onGestureEvent: this.onGestureEvent,\n        onHandlerStateChange: this.onHandlerStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: [_Notifier.default.container, {\n          transform: [{\n            translateY: this.translateYInterpolated\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        onLayout: this.onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(Component, (0, _extends2.default)({\n        title: title,\n        description: description\n      }, componentProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      }))))));\n    }\n  }]);\n  return NotifierRoot;\n}(_react.default.PureComponent);\nexports.NotifierRoot = NotifierRoot;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYO,IAAMA,QAA2B,GAAG;EACzCC,gBAAgB,EAAE,4BAAM,CAAE,CADe;EAEzCC,gBAAgB,EAAE,4BAAM,CAAE,CAFe;EAGzCC,UAAU,EAAE,sBAAM,CAAE;AAHqB,CAApC;;IAMMC,Y;;;EAWX,sBAAYC,KAAZ,EAA2C;IAAA;IAAA;IACzCC,0BAAMD,KAAN;IADyC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAGzCC,MAAKC,KAAL,GAAa;MACXC,SAAS,EAAEC,wBADA;MAEXC,YAAY,EAAEC,gCAFH;MAGXC,cAAc,EAAE;IAHL,CAAb;IAKAN,MAAKO,OAAL,GAAe,KAAf;IACAP,MAAKQ,QAAL,GAAgB,KAAhB;IACAR,MAAKS,SAAL,GAAiB,IAAjB;IACAT,MAAKU,UAAL,GAAkB,IAAlB;IACAV,MAAKW,SAAL,GAAiB,EAAjB;IACAX,MAAKY,oBAAL,GAA4B,CAACC,mCAA7B;IAEAb,MAAKc,UAAL,GAAkB,IAAIC,sBAASC,KAAb,CAAmBC,0BAAnB,CAAlB;IACAjB,MAAKkB,sBAAL,GAA8BlB,MAAKc,UAAL,CAAgBK,WAAhB,CAA4B;MACxDC,UAAU,EAAE,CAACH,0BAAD,EAAkBI,0BAAlB,CAD4C;MAExDC,WAAW,EAAE,CAACL,0BAAD,EAAkBI,0BAAlB,CAF2C;MAGxDE,WAAW,EAAE;IAH2C,CAA5B,CAA9B;IAMAvB,MAAKwB,cAAL,GAAsBT,sBAASU,KAAT,CACpB,CACE;MACEC,WAAW,EAAE;QAAEC,YAAY,EAAE3B,MAAKc;MAArB;IADf,CADF,CADoB,EAMpB;MAAEc,eAAe,EAAE;IAAnB,CANoB,CAAtB;IASA5B,MAAK6B,OAAL,GAAe7B,MAAK6B,OAAL,CAAaC,IAAb,6CAAf;IACA9B,MAAK+B,oBAAL,GAA4B/B,MAAK+B,oBAAL,CAA0BD,IAA1B,6CAA5B;IACA9B,MAAKgC,QAAL,GAAgBhC,MAAKgC,QAAL,CAAcF,IAAd,6CAAhB;IACA9B,MAAKL,gBAAL,GAAwBK,MAAKL,gBAAL,CAAsBmC,IAAtB,6CAAxB;IACA9B,MAAKJ,gBAAL,GAAwBI,MAAKJ,gBAAL,CAAsBkC,IAAtB,6CAAxB;IACA9B,MAAKH,UAAL,GAAkBG,MAAKH,UAAL,CAAgBiC,IAAhB,6CAAlB;IAEApC,QAAQ,CAACC,gBAAT,GAA4BK,MAAKL,gBAAjC;IACAD,QAAQ,CAACE,gBAAT,GAA4BI,MAAKJ,gBAAjC;IACAF,QAAQ,CAACG,UAAT,GAAsBG,MAAKH,UAA3B;IAxCyC;EAyC1C;;;2CAEsB;MACrBoC,YAAY,CAAC,KAAKxB,SAAN,CAAZ;IACD;;;qCAEuByB,Q,EAAiC;MAAA;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;QAAAC;MACvD,IAAI,CAAC,KAAKlC,OAAN,IAAiB,KAAKC,QAA1B,EAAoC;QAClC;MACD;MAEDO,sBAAS2B,MAAT,CAAgB,KAAK5B,UAArB,EAAiC;QAC/B6B,OAAO,EAAE,KAAK/B,oBADiB;QAE/BgC,MAAM,+CAAE,KAAKlC,UAAP,qDAAEyB,iBAAiBU,UAAnB,8FAAiC,KAAKnC,UAAtC,sDAAiC0B,kBAAiBQ,MAFzB;QAG/BE,QAAQ,yDACN,KAAKpC,UADC,sDACN6B,kBAAiBQ,qBADX,gGAEN,KAAKrC,UAFC,sDAEN8B,kBAAiBQ,iBAFX,uCAGNC,qCAN6B;QAO/BrB,eAAe,EAAE;MAPc,CAAjC,EAQGsB,KARH,CAQS,gBAAM,EAAI;QACjBT,MAAI,CAACU,QAAL;QACAjB,QAAQ,SAAR,YAAQ,WAAR,oBAAQ,CAAGkB,MAAH,CAAR;MACD,CAXD;MAaA,KAAKC,aAAL;IACD;;;qCAGCC,c,EACA;MAAA;MACA,IAAMC,MAAM,qBACP,KAAKxD,KADE,MAEPuD,cAFO;QAGVhD,cAAc,mCAAO,KAAKP,KAAZ,gDAAOyD,YAAYlD,cAAnB,MAAsCgD,cAAtC,aAAsCA,cAAtC,uBAAsCA,cAAc,CAAEhD,cAAtD;MAHJ,EAAZ;MAMA,IAAI,KAAKC,OAAT,EAAkB;QAChB,QAAQgD,MAAM,CAACE,SAAf;UACE,KAAK,SAAL;YAAgB;cACd,KAAK9C,SAAL,CAAe+C,IAAf,CAAoBH,MAApB;cACA;YACD;UACD,KAAK,MAAL;YAAa;cACX,KAAK5C,SAAL,CAAegD,OAAf,CAAuBJ,MAAvB;cACA;YACD;UACD,KAAK,WAAL;YAAkB;cAChB,KAAK5C,SAAL,CAAegD,OAAf,CAAuBJ,MAAvB;cACA,KAAK3D,gBAAL;cACA;YACD;UACD;YAAS;cACP,KAAKe,SAAL,GAAiB,CAAC4C,MAAD,CAAjB;cACA,KAAK3D,gBAAL;cACA;YACD;QAlBH;QAoBA;MACD;MA7BD,IA+BQgE,KA/BR,GA+BuFL,MA/BvF,CA+BQK,KA/BR;QA+BeC,WA/Bf,GA+BuFN,MA/BvF,CA+BeM,WA/Bf;QA+B4BzD,YA/B5B,GA+BuFmD,MA/BvF,CA+B4BnD,YA/B5B;QA+B0CF,SA/B1C,GA+BuFqD,MA/BvF,CA+B0CrD,SA/B1C;QA+BqDI,cA/BrD,GA+BuFiD,MA/BvF,CA+BqDjD,cA/BrD;QA+BwEwD,UA/BxE,0CA+BuFP,MA/BvF;MAiCA,KAAKQ,QAAL,CAAc;QACZH,KAAK,EAALA,KADY;QAEZC,WAAW,EAAXA,WAFY;QAGZ3D,SAAS,EAAEA,SAAF,aAAEA,SAAF,cAAEA,SAAF,GAAeC,wBAHZ;QAIZC,YAAY,EAAEA,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkBC,gCAJlB;QAKZC,cAAc,EAAEA;MALJ,CAAd;MAQA,KAAKI,UAAL,GAAkBoD,UAAlB;MACA,KAAKvD,OAAL,GAAe,IAAf;MAEA,KAAKyD,YAAL;MAEA,KAAKlD,UAAL,CAAgBmD,QAAhB,CAAyB,CAACpD,mCAA1B;MACAE,sBAAS2B,MAAT,CAAgB,KAAK5B,UAArB,EAAiC;QAC/B6B,OAAO,EAAEtB,0BADsB;QAE/BuB,MAAM,gDAAE,KAAKlC,UAAP,sDAAEwD,kBAAiBC,UAAnB,8FAAiC,KAAKzD,UAAtC,sDAAiC0D,kBAAiBxB,MAFzB;QAG/BE,QAAQ,0DACN,KAAKpC,UADC,sDACN2D,kBAAiBC,qBADX,gGAEN,KAAK5D,UAFC,sDAEN6D,kBAAiBvB,iBAFX,yCAGNC,qCAN6B;QAO/BrB,eAAe,EAAE;MAPc,CAAjC,EAQGsB,KARH;IASD;;;+BAEiBsB,yB,EAAqC;MACrD,KAAK7D,SAAL,GAAiB,EAAjB;MAEA,IAAI6D,yBAAJ,EAA+B;QAC7B,KAAK5E,gBAAL;MACD;IACF;;;mCAEsB;MAAA;MAAA,iCACmB,KAAKc,UADxB,iEACsC,EADtC;QAAA+D,uBACb3B,QADa;QACbA,QADa,+BACF4B,2BADE;MAErBzC,YAAY,CAAC,KAAKxB,SAAN,CAAZ;MACA,IAAIqC,QAAQ,IAAI,CAAC6B,KAAK,CAAC7B,QAAD,CAAtB,EAAkC;QAChC,KAAKrC,SAAL,GAAiBmE,UAAU,CAAC,KAAKhF,gBAAN,EAAwBkD,QAAxB,CAA3B;MACD;IACF;;;oCAEuB;MAAA;MACtB,2BAAKpC,UAAL,mGAAiB2C,aAAjB;MACA,KAAK7C,QAAL,GAAgB,IAAhB;MACAyB,YAAY,CAAC,KAAKxB,SAAN,CAAZ;IACD;;;+BAEkB;MAAA;MACjB,2BAAKC,UAAL,mGAAiByC,QAAjB;MACA,KAAK5C,OAAL,GAAe,KAAf;MACA,KAAKC,QAAL,GAAgB,KAAhB;MACA,KAAKE,UAAL,GAAkB,IAAlB;MACA,KAAKI,UAAL,CAAgBmD,QAAhB,CAAyBhD,0BAAzB;MAEA,IAAM4D,gBAAgB,GAAG,KAAKlE,SAAL,CAAemE,KAAf,EAAzB;MACA,IAAID,gBAAJ,EAAsB;QACpB,KAAKlF,gBAAL,CAAsBkF,gBAAtB;MACD;IACF;;;gDAEgF;MAAA;QAAAE;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,IAAlDzD,WAAkD,SAAlDA,WAAkD;MAC/E,IAAIA,WAAW,CAACzB,KAAZ,KAAsBmF,iCAAMC,MAAhC,EAAwC;QACtCpD,YAAY,CAAC,KAAKxB,SAAN,CAAZ;MACD;MACD,IAAIiB,WAAW,CAAC4D,QAAZ,KAAyBF,iCAAMC,MAAnC,EAA2C;QACzC;MACD;MACD,KAAKrB,YAAL;MAEA,IAAMuB,kBAAkB,GAAG,iDAAE,KAAK7E,UAAP,uDAAEqE,mBAAiBQ,kBAAnB,yEAAyCC,gCAAzC,CAA3B;MACA,IAAMC,WAAW,GAAG/D,WAAW,CAACC,YAAZ,GAA2B4D,kBAA/C;MAEAxE,sBAAS2B,MAAT,CAAgB,KAAK5B,UAArB,EAAiC;QAC/B6B,OAAO,EAAE8C,WAAW,GAAG,KAAK7E,oBAAR,GAA+BS,0BADpB;QAE/BuB,MAAM,wBAAE,KAAKlC,UAAP,uDAAEsE,mBAAiBU,WAFM;QAG/B5C,QAAQ,kDAAE,KAAKpC,UAAP,uDAAEwE,mBAAiBS,sBAAnB,2EAA6CC,mCAHtB;QAI/BhE,eAAe,EAAE;MAJc,CAAjC,EAKGsB,KALH,CAKS,YAAM;QACb,IAAIuC,WAAJ,EAAiB;UACfN,MAAI,CAAChC,QAAL;QACD;MACF,CATD;MAWA,IAAIsC,WAAJ,EAAiB;QACf,KAAKpC,aAAL;MACD;IACF;;;8BAEiB;MAAA;MAChB,2BAAK3C,UAAL,mGAAiBmB,OAAjB;MACA,IAAI,4BAAKnB,UAAL,0EAAiBmF,WAAjB,MAAiC,KAArC,EAA4C;QAC1C,KAAKjG,gBAAL;MACD;IACF;;;oCAEoD;MAAA,IAAlC8B,WAAkC,SAAlCA,WAAkC;MACnD,IAAMoE,gBAAgB,GAAGpE,WAAW,CAACqE,MAAZ,CAAmBC,MAAnB,GAA4B,EAArD;MACA,KAAKpF,oBAAL,GAA4B,CAACqF,IAAI,CAACC,GAAL,CAASJ,gBAAT,EAA2BjF,mCAA3B,CAA7B;IACD;;;6BAEQ;MAAA,kBACiE,KAAKZ,KADtE;QACC2D,KADD,eACCA,KADD;QACQC,WADR,eACQA,WADR;QACqBzD,YADrB,eACqBA,YADrB;QACmCF,SADnC,eACmCA,SADnC;QAC8CI,cAD9C,eAC8CA,cAD9C;MAGP,OACE6F,6BAACC,4CAAD;QACEC,OAAO,EAAEjG,YADX;QAEEoB,cAAc,EAAE,KAAKA,cAFvB;QAGEO,oBAAoB,EAAE,KAAKA,oBAH7B;QAAAuE;UAAAC;UAAAC;UAAAC;QAAA;MAAA,GAKEN,6BAACO,qBAAD,CAAUC,IAAV;QACEC,KAAK,EAAE,CACLC,kBAAEC,SADG,EAEL;UACEC,SAAS,EAAE,CAAC;YAAEjG,UAAU,EAAE,KAAKI;UAAnB,CAAD;QADb,CAFK,CADT;QAAAoF;UAAAC;UAAAC;UAAAC;QAAA;MAAA,GAQEN,6BAACO,qCAAD;QAA0B7E,OAAO,EAAE,KAAKA,OAAxC;QAAAyE;UAAAC;UAAAC;UAAAC;QAAA;MAAA,GACEN,6BAACO,iBAAD;QAAM1E,QAAQ,EAAE,KAAKA,QAArB;QAAAsE;UAAAC;UAAAC;UAAAC;QAAA;MAAA,GACEN,6BAACjG,SAAD;QAAW0D,KAAK,EAAEA,KAAlB;QAAyBC,WAAW,EAAEA;MAAtC,GAAuDvD,cAAvD;QAAAgG;UAAAC;UAAAC;UAAAC;QAAA;MAAA,GADF,CADF,CARF,CALF,CADF;IAsBD;;;EA/O+BO,eAAMC,a","names":["Notifier","showNotification","hideNotification","clearQueue","NotifierRoot","props","_this","state","Component","NotificationComponent","swipeEnabled","DEFAULT_SWIPE_ENABLED","componentProps","isShown","isHiding","hideTimer","showParams","callStack","hiddenComponentValue","DEFAULT_COMPONENT_HEIGHT","translateY","Animated","Value","MIN_TRANSLATE_Y","translateYInterpolated","interpolate","inputRange","MAX_TRANSLATE_Y","outputRange","extrapolate","onGestureEvent","event","nativeEvent","translationY","useNativeDriver","onPress","bind","onHandlerStateChange","onLayout","clearTimeout","callback","_this$showParams","_this$showParams2","_ref","_this$showParams$hide2","_this$showParams3","_this$showParams4","_this2","timing","toValue","easing","hideEasing","duration","hideAnimationDuration","animationDuration","DEFAULT_ANIMATION_DURATION","start","onHidden","result","onStartHiding","functionParams","params","_this$props","queueMode","push","unshift","title","description","restParams","setState","setHideTimer","setValue","_this$showParams5","showEasing","_this$showParams6","_this$showParams7","showAnimationDuration","_this$showParams8","hideDisplayedNotification","_ref3$duration","DEFAULT_DURATION","isNaN","setTimeout","nextNotification","shift","_this$showParams12","_this$showParams13","_this$showParams$swip2","_this$showParams14","_this3","State","ACTIVE","oldState","swipePixelsToClose","SWIPE_PIXELS_TO_CLOSE","isSwipedOut","swipeEasing","swipeAnimationDuration","SWIPE_ANIMATION_DURATION","hideOnPress","heightWithMargin","layout","height","Math","max","_react","_reactNativeGestureHandler","enabled","__source","fileName","lineNumber","columnNumber","_reactNative","View","style","s","container","transform","React","PureComponent"],"sources":["Notifier.tsx"],"sourcesContent":["import React from 'react';\nimport { Animated, View, TouchableWithoutFeedback, LayoutChangeEvent } from 'react-native';\nimport {\n  PanGestureHandler,\n  State,\n  PanGestureHandlerStateChangeEvent,\n} from 'react-native-gesture-handler';\n\nimport s from './Notifier.styles';\nimport { Notification as NotificationComponent } from './components';\nimport {\n  DEFAULT_ANIMATION_DURATION,\n  DEFAULT_DURATION,\n  MAX_TRANSLATE_Y,\n  MIN_TRANSLATE_Y,\n  SWIPE_ANIMATION_DURATION,\n  SWIPE_PIXELS_TO_CLOSE,\n  DEFAULT_SWIPE_ENABLED,\n  DEFAULT_COMPONENT_HEIGHT,\n} from './constants';\nimport { ShowParams, ShowNotificationParams, StateInterface, NotifierInterface } from './types';\n\nexport const Notifier: NotifierInterface = {\n  showNotification: () => {},\n  hideNotification: () => {},\n  clearQueue: () => {},\n};\n\nexport class NotifierRoot extends React.PureComponent<ShowNotificationParams, StateInterface> {\n  private isShown: boolean;\n  private isHiding: boolean;\n  private hideTimer: any;\n  private showParams: ShowParams | null;\n  private callStack: Array<ShowNotificationParams>;\n  private hiddenComponentValue: number;\n  private readonly translateY: Animated.Value;\n  private readonly translateYInterpolated: Animated.AnimatedInterpolation;\n  private readonly onGestureEvent: (...args: any[]) => void;\n\n  constructor(props: ShowNotificationParams) {\n    super(props);\n\n    this.state = {\n      Component: NotificationComponent,\n      swipeEnabled: DEFAULT_SWIPE_ENABLED,\n      componentProps: {},\n    };\n    this.isShown = false;\n    this.isHiding = false;\n    this.hideTimer = null;\n    this.showParams = null;\n    this.callStack = [];\n    this.hiddenComponentValue = -DEFAULT_COMPONENT_HEIGHT;\n\n    this.translateY = new Animated.Value(MIN_TRANSLATE_Y);\n    this.translateYInterpolated = this.translateY.interpolate({\n      inputRange: [MIN_TRANSLATE_Y, MAX_TRANSLATE_Y],\n      outputRange: [MIN_TRANSLATE_Y, MAX_TRANSLATE_Y],\n      extrapolate: 'clamp',\n    });\n\n    this.onGestureEvent = Animated.event(\n      [\n        {\n          nativeEvent: { translationY: this.translateY },\n        },\n      ],\n      { useNativeDriver: true }\n    );\n\n    this.onPress = this.onPress.bind(this);\n    this.onHandlerStateChange = this.onHandlerStateChange.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n    this.showNotification = this.showNotification.bind(this);\n    this.hideNotification = this.hideNotification.bind(this);\n    this.clearQueue = this.clearQueue.bind(this);\n\n    Notifier.showNotification = this.showNotification;\n    Notifier.hideNotification = this.hideNotification;\n    Notifier.clearQueue = this.clearQueue;\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.hideTimer);\n  }\n\n  public hideNotification(callback?: Animated.EndCallback) {\n    if (!this.isShown || this.isHiding) {\n      return;\n    }\n\n    Animated.timing(this.translateY, {\n      toValue: this.hiddenComponentValue,\n      easing: this.showParams?.hideEasing ?? this.showParams?.easing,\n      duration:\n        this.showParams?.hideAnimationDuration ??\n        this.showParams?.animationDuration ??\n        DEFAULT_ANIMATION_DURATION,\n      useNativeDriver: true,\n    }).start(result => {\n      this.onHidden();\n      callback?.(result);\n    });\n\n    this.onStartHiding();\n  }\n\n  public showNotification<ComponentType extends React.ElementType = typeof NotificationComponent>(\n    functionParams: ShowNotificationParams<ComponentType>\n  ) {\n    const params = {\n      ...this.props,\n      ...functionParams,\n      componentProps: { ...this.props?.componentProps, ...functionParams?.componentProps },\n    };\n\n    if (this.isShown) {\n      switch (params.queueMode) {\n        case 'standby': {\n          this.callStack.push(params);\n          break;\n        }\n        case 'next': {\n          this.callStack.unshift(params);\n          break;\n        }\n        case 'immediate': {\n          this.callStack.unshift(params);\n          this.hideNotification();\n          break;\n        }\n        default: {\n          this.callStack = [params];\n          this.hideNotification();\n          break;\n        }\n      }\n      return;\n    }\n\n    const { title, description, swipeEnabled, Component, componentProps, ...restParams } = params;\n\n    this.setState({\n      title,\n      description,\n      Component: Component ?? NotificationComponent,\n      swipeEnabled: swipeEnabled ?? DEFAULT_SWIPE_ENABLED,\n      componentProps: componentProps,\n    });\n\n    this.showParams = restParams;\n    this.isShown = true;\n\n    this.setHideTimer();\n\n    this.translateY.setValue(-DEFAULT_COMPONENT_HEIGHT);\n    Animated.timing(this.translateY, {\n      toValue: MAX_TRANSLATE_Y,\n      easing: this.showParams?.showEasing ?? this.showParams?.easing,\n      duration:\n        this.showParams?.showAnimationDuration ??\n        this.showParams?.animationDuration ??\n        DEFAULT_ANIMATION_DURATION,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  public clearQueue(hideDisplayedNotification?: boolean) {\n    this.callStack = [];\n\n    if (hideDisplayedNotification) {\n      this.hideNotification();\n    }\n  }\n\n  private setHideTimer() {\n    const { duration = DEFAULT_DURATION } = this.showParams ?? {};\n    clearTimeout(this.hideTimer);\n    if (duration && !isNaN(duration)) {\n      this.hideTimer = setTimeout(this.hideNotification, duration);\n    }\n  }\n\n  private onStartHiding() {\n    this.showParams?.onStartHiding?.();\n    this.isHiding = true;\n    clearTimeout(this.hideTimer);\n  }\n\n  private onHidden() {\n    this.showParams?.onHidden?.();\n    this.isShown = false;\n    this.isHiding = false;\n    this.showParams = null;\n    this.translateY.setValue(MIN_TRANSLATE_Y);\n\n    const nextNotification = this.callStack.shift();\n    if (nextNotification) {\n      this.showNotification(nextNotification);\n    }\n  }\n\n  private onHandlerStateChange({ nativeEvent }: PanGestureHandlerStateChangeEvent) {\n    if (nativeEvent.state === State.ACTIVE) {\n      clearTimeout(this.hideTimer);\n    }\n    if (nativeEvent.oldState !== State.ACTIVE) {\n      return;\n    }\n    this.setHideTimer();\n\n    const swipePixelsToClose = -(this.showParams?.swipePixelsToClose ?? SWIPE_PIXELS_TO_CLOSE);\n    const isSwipedOut = nativeEvent.translationY < swipePixelsToClose;\n\n    Animated.timing(this.translateY, {\n      toValue: isSwipedOut ? this.hiddenComponentValue : MAX_TRANSLATE_Y,\n      easing: this.showParams?.swipeEasing,\n      duration: this.showParams?.swipeAnimationDuration ?? SWIPE_ANIMATION_DURATION,\n      useNativeDriver: true,\n    }).start(() => {\n      if (isSwipedOut) {\n        this.onHidden();\n      }\n    });\n\n    if (isSwipedOut) {\n      this.onStartHiding();\n    }\n  }\n\n  private onPress() {\n    this.showParams?.onPress?.();\n    if (this.showParams?.hideOnPress !== false) {\n      this.hideNotification();\n    }\n  }\n\n  private onLayout({ nativeEvent }: LayoutChangeEvent) {\n    const heightWithMargin = nativeEvent.layout.height + 50;\n    this.hiddenComponentValue = -Math.max(heightWithMargin, DEFAULT_COMPONENT_HEIGHT);\n  }\n\n  render() {\n    const { title, description, swipeEnabled, Component, componentProps } = this.state;\n\n    return (\n      <PanGestureHandler\n        enabled={swipeEnabled}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      >\n        <Animated.View\n          style={[\n            s.container,\n            {\n              transform: [{ translateY: this.translateYInterpolated }],\n            },\n          ]}\n        >\n          <TouchableWithoutFeedback onPress={this.onPress}>\n            <View onLayout={this.onLayout}>\n              <Component title={title} description={description} {...componentProps} />\n            </View>\n          </TouchableWithoutFeedback>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"script"}